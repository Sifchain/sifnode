name: Node.js CI

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '14.x'
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node.js modules
        id: yarn-cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent

      - name: Build test chains
        run: yarn chain:build && yarn build

      - name: Test Frontend
        run: yarn test
        env:
          CI: true
          CONSENSUS_THRESHOLD: 25
          OPERATOR: "0x627306090abaB3A6e1400e9345bC60c78a8BEf57"
          PAUSER: "0x627306090abaB3A6e1400e9345bC60c78a8BEf57"
          OWNER: "0x627306090abaB3A6e1400e9345bC60c78a8BEf57"
          MNEMONIC: "candy maple cake sugar pudding cream honey rich smooth crumble sweet treat"
          INFURA_PROJECT_ID: "JFSH7439sjsdtqTM23Dz"
          INITIAL_VALIDATOR_ADDRESSES: "0x627306090abaB3A6e1400e9345bC60c78a8BEf57,0xf17f52151EbEF6C7334FAD080c5704D77216b732"
          INITIAL_VALIDATOR_POWERS: "50,50"
          MAINNET_GAS_PRICE: 200000000000
          EROWAN_ADDRESS: "0x0d8cc4b8d15D4c3eF1d70af0071376fb26B5669b"
          ETHEREUM_PRIVATE_KEY: "c87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3"

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./ui/core/coverage
