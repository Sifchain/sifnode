name: Build then Deploy to Pinata
# run run on merge
on: 
  push:
    branches:
      - 'develop'
      - 'testnet'
      - 'master'
    paths:
      - 'ui/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '14.x'

      - name: Set environment for IPFS build
        run: |
          echo $GITHUB_REF

          if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
              echo "Config set for DevNet deployment"
              echo "VUE_APP_DEPLOYMENT_TAG=devnet" >> "$GITHUB_ENV"
              echo "VUE_APP_ETHEREUM_ASSET_TAG=ethereum.devnet" >> "$GITHUB_ENV"
              echo "VUE_APP_SIFCHAIN_ASSET_TAG=sifchain.mainnet" >> "$GITHUB_ENV"
          fi

          if [[ $GITHUB_REF == 'refs/heads/testnet' ]]; then
              echo "Config set for TestNet deployment"
              echo "VUE_APP_DEPLOYMENT_TAG=testnet" >> "$GITHUB_ENV"
              echo "VUE_APP_ETHEREUM_ASSET_TAG=ethereum.testnet" >> "$GITHUB_ENV"
              echo "VUE_APP_SIFCHAIN_ASSET_TAG=sifchain.mainnet" >> "$GITHUB_ENV"
          fi

          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
              echo "Config set for mainnet deployment"
              echo "VUE_APP_DEPLOYMENT_TAG=mainnet" >> "$GITHUB_ENV"
              echo "VUE_APP_ETHEREUM_ASSET_TAG=ethereum.mainnet" >> "$GITHUB_ENV"
              echo "VUE_APP_SIFCHAIN_ASSET_TAG=sifchain.mainnet" >> "$GITHUB_ENV"
          fi

      - name: Build App
        run: |
          echo $VUE_APP_DEPLOYMENT_TAG
          cd ui && yarn install --frozen-lockfile && yarn build
      - name: Deploy App to IPFS/Pinata
        id: pinata
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: 'Sifchain ${{ env.VUE_APP_DEPLOYMENT_TAG }} - ${{ github.sha }}-${{ env.GITHUB_REF }}'
          path: './ui/app/dist'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_SECRET_KEY }}
          verbose: true
          remove-old: true

      - name: Set environment for dnslink
        run: |
          echo $GITHUB_REF

          if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
            echo "Config set for DevNet deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.devnet" >> $GITHUB_ENV
          fi

          if [[ $GITHUB_REF == 'refs/heads/testnet' ]]; then
            echo "Config set for TestNet deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.testnet" >> $GITHUB_ENV
          fi

          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "Config set for MainNet deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.dex" >> $GITHUB_ENV
          fi

      - name: Update cloudflare DNSLink
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        with:
            cid: ${{ steps.pinata.outputs.hash }}

      - name: Write Code Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            VUE_APP_DEPLOYMENT_TAG: ${{ env.VUE_APP_DEPLOYMENT_TAG }} \
            IPFS Hash: ${{ steps.pinata.outputs.hash }}\
            URL: <https://gateway.pinata.cloud/ipfs/${{ steps.pinata.outputs.hash }}>
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false

