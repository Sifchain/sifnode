{
  "contractName": "MockCosmosBridgeUpgrade",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_bridgeBank",
          "type": "address"
        }
      ],
      "name": "LogBridgeBankSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "LogNewOracleClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "_ethereumReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "LogNewProphecyClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "LogOracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        }
      ],
      "name": "LogProphecyCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyPowerCurrent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyPowerThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_submitter",
          "type": "address"
        }
      ],
      "name": "LogProphecyProcessed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentValsetVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_validatorCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalPower",
          "type": "uint256"
        }
      ],
      "name": "LogValidatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentValsetVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_validatorCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalPower",
          "type": "uint256"
        }
      ],
      "name": "LogValidatorPowerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentValsetVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_validatorCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalPower",
          "type": "uint256"
        }
      ],
      "name": "LogValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newValsetVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_validatorCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalPower",
          "type": "uint256"
        }
      ],
      "name": "LogValsetReset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newValsetVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_validatorCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalPower",
          "type": "uint256"
        }
      ],
      "name": "LogValsetUpdated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_validatorPower",
          "type": "uint256"
        }
      ],
      "name": "addValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeBank",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consensusThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cosmosBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentValsetVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_cosmosSenderSequence",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_ethereumReceiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getProphecyID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        }
      ],
      "name": "getProphecyThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "getValidatorPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasBridgeBank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasMadeClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_consensusThreshold",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_initValidators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_initPowers",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "isActiveValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_cosmosSenderSequence",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_ethereumReceiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "newProphecyClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "oracleClaimValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "powers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prophecyClaims",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "ethereumReceiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_valsetVersion",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "recoverGas",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "removeValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_bridgeBank",
          "type": "address"
        }
      ],
      "name": "setBridgeBank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newValidatorPower",
          "type": "uint256"
        }
      ],
      "name": "updateValidatorPower",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_validators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_powers",
          "type": "uint256[]"
        }
      ],
      "name": "updateValset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "valset",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "tokenFaucet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_bridgeBank\",\"type\":\"address\"}],\"name\":\"LogBridgeBankSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"LogNewOracleClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_ethereumReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogNewProphecyClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"LogOracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"}],\"name\":\"LogProphecyCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyPowerCurrent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyPowerThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"}],\"name\":\"LogProphecyProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentValsetVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_validatorCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPower\",\"type\":\"uint256\"}],\"name\":\"LogValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentValsetVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_validatorCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPower\",\"type\":\"uint256\"}],\"name\":\"LogValidatorPowerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentValsetVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_validatorCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPower\",\"type\":\"uint256\"}],\"name\":\"LogValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newValsetVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_validatorCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPower\",\"type\":\"uint256\"}],\"name\":\"LogValsetReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newValsetVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_validatorCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPower\",\"type\":\"uint256\"}],\"name\":\"LogValsetUpdated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_validatorPower\",\"type\":\"uint256\"}],\"name\":\"addValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeBank\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consensusThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cosmosBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentValsetVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_cosmosSenderSequence\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_ethereumReceiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getProphecyID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"}],\"name\":\"getProphecyThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"getValidatorPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasBridgeBank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasMadeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_consensusThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_initValidators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_initPowers\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"isActiveValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_cosmosSenderSequence\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_ethereumReceiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"newProphecyClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracleClaimValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"powers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prophecyClaims\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"ethereumReceiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_valsetVersion\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"recoverGas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_bridgeBank\",\"type\":\"address\"}],\"name\":\"setBridgeBank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tokenFaucet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newValidatorPower\",\"type\":\"uint256\"}],\"name\":\"updateValidatorPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_powers\",\"type\":\"uint256[]\"}],\"name\":\"updateValset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"valset\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"Add a token to the cosmos bridge to test that upgrades work correctly\"}},\"settings\":{\"compilationTarget\":{\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol\":\"MockCosmosBridgeUpgrade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/BankStorage.sol\":{\"keccak256\":\"0x76f3b443ae4af515a656caa8beb5b499468c8caf4d396fb8478f3b48cdd555e2\",\"urls\":[\"bzz-raw://cf4ac70000e2bf8f267f44ceaf209f2ce06fdd0db61749a465e6e6c2299c3d0c\",\"dweb:/ipfs/QmXdYqnAcnx2cH9pC7J8Ld4fu1RewmNePKUXwjV8qYYk7M\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/BridgeBank.sol\":{\"keccak256\":\"0x0983849dd8952f0fd38178f60ef9d3280eaba31778357233d8edc1d72a7e1998\",\"urls\":[\"bzz-raw://4dfea23178335f158ff2797f4b6ac3647d1fcf85e599c787b60f9167fa489c57\",\"dweb:/ipfs/QmYkqHogzGhQdjKUYXmAR37CUeTjBRipeLbcFF2wkqVjtK\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/BridgeToken.sol\":{\"keccak256\":\"0x73d505ad2ab91460c481b40ffa3520ba4b85eb1a184ac740f0740c2723727608\",\"urls\":[\"bzz-raw://e05d5cdbf6e99b86070a74215f0ef768a1bfd61dc6f69aeaeb2bd9c0474e1dd1\",\"dweb:/ipfs/QmToU4QpvNwAB2usrC33BZbf1ihDUYKMEWLy8SC9tF7Ttz\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosBank.sol\":{\"keccak256\":\"0x289b7db894721e336f9f752059553bdddc29a442ff8e145d97582175bed35c31\",\"urls\":[\"bzz-raw://b49afd1a84f755406ad3beef26ecdee616e175a7b7779cdb5a6455a9eb9616ff\",\"dweb:/ipfs/QmV97pQgWdA7tmPFZUJW2Bo54QaZxSowpGxzoLXg8KjGZi\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosBankStorage.sol\":{\"keccak256\":\"0x5484b8729700e1971ad08a04f8a8ea895600f7d91d9a37b59546468ebb6207d3\",\"urls\":[\"bzz-raw://df8206fe5c8e841c412c3f19cc317bc26d788ae2434e0810ab0fdf26408714d7\",\"dweb:/ipfs/QmPK9Qe56nU1aSPF1y4AET64TyvFhHUeXx1UNtaTVLiLtD\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosWhiteList.sol\":{\"keccak256\":\"0x03aa7befc88ef0f340de029ed63705c40351687def4f308d76262c0ae6f19073\",\"urls\":[\"bzz-raw://bb80ddfd10e73e9cad7946c25b859e06bc4f42e28863d9e49b98dd4ae1c8e83c\",\"dweb:/ipfs/QmZLf24UWePp7A6DpTivYPcDeYWb3vKhUmDcEpk1rkYV6V\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosWhiteListStorage.sol\":{\"keccak256\":\"0x700a5bdce4350d8a4dfb93f5d6a3d20ec394d61ddedb6e8c067d9cc7853a7c0c\",\"urls\":[\"bzz-raw://e817912f024643c580de79e1ae31bcb89d522759488be201a91ed14e65c15e82\",\"dweb:/ipfs/QmTNnxzCsrBDE9ANahhbkPpvrwYfntXfm9raoUm6MAk46u\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumBank.sol\":{\"keccak256\":\"0xae09b09acf7f4749d1d6ce2c13f852347a14e3419bfd32d9addb9776234aee9a\",\"urls\":[\"bzz-raw://0df995b0897b475961c57193536642d03269fc426e0755af5b273a77b5f6d05d\",\"dweb:/ipfs/QmbDy5avMwSoADx49F3pJH4iYNDvodvdz5cXQU6TuEBZdE\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumBankStorage.sol\":{\"keccak256\":\"0x24e82ea4799f5dc6a9732a43a988e8e19a9aecde88b5a113c5f818be80f8523f\",\"urls\":[\"bzz-raw://2a53793f59aea4c787e181297465fead5c10349fd738a64abae480d8d0a261ab\",\"dweb:/ipfs/QmYjdArY2ZwWXMCrTinKZzx2KvLUhAubwWdv2XxMbQsv4S\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumWhitelist.sol\":{\"keccak256\":\"0xfc6a891f550f27d84ea06d187b740b8978b6022db2dd6e0d33805995e1aa6f94\",\"urls\":[\"bzz-raw://571efcf2b602ca7418e59a53fa560cf817f17968de67d860abc90c2cd0041f8d\",\"dweb:/ipfs/QmUuxsfk8CWwR5AffNsqVGmGAvgPM4AjugfoWKE3h4vxQt\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/Pausable.sol\":{\"keccak256\":\"0x5de141c30c2e738af48a2b66017bc07461dd0914613c1cfde08af7cd041ef7a2\",\"urls\":[\"bzz-raw://a4de1cfb7df20be2056ccfeb0d4be3eda2d547556ef5daed0cc94c49dd3ab471\",\"dweb:/ipfs/QmdXiWrNsCdTNKjN9m5Wtst77fw6QNsVUFwwNa4x5UpnRF\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/PauserRole.sol\":{\"keccak256\":\"0xe43374c4774ee7235bec37d9c935635ae5dd9411cfd99ac8dafa3183ae28a125\",\"urls\":[\"bzz-raw://937aa067ec2054dc069a9f6398286a75c529b2ee7c4e0e1c63157440b9e91c2b\",\"dweb:/ipfs/QmTH83gpNPbfaHDTM1ThrJifFTBKKxVb4jTfbR3ErcggUD\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/BridgeBank/ToLower.sol\":{\"keccak256\":\"0x764f8f8d5155e34b5787ad4ec894bbbea563e2e0c9f02c00ad897e304c99a518\",\"urls\":[\"bzz-raw://93434141905c4f0f9bab87ea89235c1470f5a8378ecfee0b27f2c283618d5744\",\"dweb:/ipfs/QmTQtvePhtNmEu9JDUygZ7ZyochA4dMJrZL5kf597Nyg2C\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol\":{\"keccak256\":\"0xf7543b568d9d8027a2fe4cf2a90feb434bb89996ef3549789f96b29a88dd9c63\",\"urls\":[\"bzz-raw://aad7eb827d3a761d959f77581a51d63e6bc7252891538248924b958a2798cd12\",\"dweb:/ipfs/QmaeAQ4vd2iPhyBpXdajDfLPKZjFmHEWHspmyv9nNwX2FB\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/CosmosBridgeStorage.sol\":{\"keccak256\":\"0xdfdf6b0a706c822e73f5cdc17603c619b1db64a7d794ee6c1aaa1ca5c269ab75\",\"urls\":[\"bzz-raw://8505e12de1e5ae5405623728c75d2d15097789148673f8f5bfb7ba51e8e7231c\",\"dweb:/ipfs/QmeKZnPzxtnXF27FLS7ZbPVf6G3vk94Tw4kE1JYTZYsz2A\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol\":{\"keccak256\":\"0x7a09dff16c8e98c34e498ffa55612bfdbe94a0dff204c79a0dc91c5536c18ce8\",\"urls\":[\"bzz-raw://c131b55888bf5b3befb24457efbd2b2cfa0f55ff7b1b9a1366b476337e3822e6\",\"dweb:/ipfs/QmVj4vfDwA6F8JuFDnUj6MTJJ46D4iuoUiBCyYKNfrqQqR\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/Oracle.sol\":{\"keccak256\":\"0x4738e2c07bcdfc795def41699d1e63d8bb620f6b2df8f12f66c5d84e8433ba08\",\"urls\":[\"bzz-raw://64937476096f36636614857052190781b10a4f598093547f6b86a035ffcad2c5\",\"dweb:/ipfs/QmdzSwpiuyRqAY6roukExseBNLQiaqoGVaU6j6i7ZWn6YU\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/OracleStorage.sol\":{\"keccak256\":\"0x9926c0b887b239bdce0ea42a8401fa91cbc14d3f74c73effdab4686bdf87d1d6\",\"urls\":[\"bzz-raw://d8f1ca270907b111cb9e91b52c96f70fc61cdf7f4128aa815b11085266d7895b\",\"dweb:/ipfs/QmPKFeJJgGs1Mns2CXVzV4rxmWnwkxYL8HiGnQp7QrdjMM\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/Valset.sol\":{\"keccak256\":\"0x035526fc13cbde8adce2b573114a3669687820368da0a236efb98a174b0e5adc\",\"urls\":[\"bzz-raw://eafe180a8d731eb58f944c16afbc2bb9972af33f3ddf36569c699c83e217d099\",\"dweb:/ipfs/QmTbjh26iX67UqKG1UoLCbDnd6Ff9DfoKe7pg6ED45G1zw\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/ValsetStorage.sol\":{\"keccak256\":\"0xeccb7bd324eee86a25aa3478e249cccf31196b74c3b8d205fd9bfaccc04a6ffd\",\"urls\":[\"bzz-raw://18559e541555b92faa193e008c7ab7fd48b75f4eeeca0e42505a3ad1f95073d8\",\"dweb:/ipfs/QmVMLx5uEBX9u77DfoqFRE1qpMsSNMt4yzRXEjV1dWVVNK\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9b94356691f3cbf90a5d83ae3fdf6a5a662bb004d2bd8b034160d60221807e64\",\"urls\":[\"bzz-raw://14a9d33db455302b8bb9fdb28998efefbe5a1cb41b29e31391609f646b2ab351\",\"dweb:/ipfs/Qmd4wFr6GEMZnnxgXeq3gmp7cs8tqDuHp3TVNhCbjnux2V\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzz-raw://c44ae0ad1bce141c33b962f8b4e9228bdf8df36c8ac363b4f0bf9498b8bfc32a\",\"dweb:/ipfs/QmcSBRdFwVvy2wFZrBwo5cvqNP4UHh9Eyzf8jnxBgnPqfe\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613404806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637f54af0c11610104578063a9059cbb116100a2578063db3ad22c11610071578063db3ad22c1461091d578063db4237af14610925578063f9b0b5b9146109d0578063fc6c1f02146109d8576101da565b8063a9059cbb14610880578063aef6ac3a146108ac578063b0e9ef71146108e9578063b5672be3146108f1576101da565b806389eb068a116100de57806389eb068a146107085780638d56c37d146107105780639a19224f14610718578063a219763e14610854576101da565b80637f54af0c146106ae578063814c92c3146106b6578063850f43dd146106dc576101da565b8063570ca7351161017c57806370a082311161014b57806370a082311461053c578063788cf92f1461056257806378ffb1c6146106895780637dc0d1d0146106a6576101da565b8063570ca735146102fd5780635d4c66a31461030557806369294a4e146104535780636e850da41461045b576101da565b806340550a1c116101b857806340550a1c1461024b57806340a141ff1461028557806345aaf18c146102ab578063473691a4146102d7576101da565b80630e41f373146101df5780630f43a677146102035780632e75293b1461021d575b600080fd5b6101e7610a04565b604080516001600160a01b039092168252519081900360200190f35b61020b610a13565b60408051918252519081900360200190f35b6102496004803603604081101561023357600080fd5b506001600160a01b038135169060200135610a19565b005b6102716004803603602081101561026157600080fd5b50356001600160a01b0316610ba9565b604080519115158252519081900360200190f35b6102496004803603602081101561029b57600080fd5b50356001600160a01b0316610bd4565b610271600480360360408110156102c157600080fd5b506001600160a01b038135169060200135610d80565b61020b600480360360208110156102ed57600080fd5b50356001600160a01b0316610da0565b6101e7610dc8565b610249600480360360c081101561031b57600080fd5b60ff823516919081019060408101602082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b03602087013516959194509250606081019150604001356401000000008111156103dc57600080fd5b8201836020820111156103ee57600080fd5b8035906020019184600183028401116401000000008311171561041057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610dd7915050565b610271611f69565b61020b600480360360c081101561047157600080fd5b60ff823516919081019060408101602082013564010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b919390928235926001600160a01b036020820135169291906060810190604001356401000000008111156104fd57600080fd5b82018360208201111561050f57600080fd5b8035906020019184600183028401116401000000008311171561053157600080fd5b919350915035611f79565b61020b6004803603602081101561055257600080fd5b50356001600160a01b0316612006565b6102496004803603604081101561057857600080fd5b81019060208101813564010000000081111561059357600080fd5b8201836020820111156105a557600080fd5b803590602001918460208302840111640100000000831117156105c757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561061757600080fd5b82018360208201111561062957600080fd5b8035906020019184602083028401116401000000008311171561064b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612022945050505050565b61020b6004803603602081101561069f57600080fd5b5035612161565b6101e7612173565b6101e7612182565b610249600480360360208110156106cc57600080fd5b50356001600160a01b0316612191565b61020b600480360360408110156106f257600080fd5b506001600160a01b0381351690602001356122a7565b6102496122c4565b61020b6122d5565b6102496004803603608081101561072e57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561075e57600080fd5b82018360208201111561077057600080fd5b8035906020019184602083028401116401000000008311171561079257600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156107e257600080fd5b8201836020820111156107f457600080fd5b8035906020019184602083028401116401000000008311171561081657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506122db945050505050565b6102716004803603604081101561086a57600080fd5b50803590602001356001600160a01b03166123c8565b6102716004803603604081101561089657600080fd5b506001600160a01b0381351690602001356123e8565b6108c9600480360360208110156108c257600080fd5b50356123ff565b604080519315158452602084019290925282820152519081900360600190f35b6101e7612458565b6102496004803603604081101561090757600080fd5b50803590602001356001600160a01b0316612467565b61020b612544565b6109426004803603602081101561093b57600080fd5b503561254a565b604080516001600160a01b0385168152908101829052606060208083018281528551928401929092528451608084019186019080838360005b8381101561099357818101518382015260200161097b565b50505050905090810190601f1680156109c05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61020b612604565b610249600480360360408110156109ee57600080fd5b506001600160a01b03813516906020013561260a565b6004546001600160a01b031681565b60d55481565b60d7546001600160a01b03163314610a70576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b6001600160a01b038216600090815260d66020908152604080832060d454845290915290205460ff16610ad45760405162461bcd60e51b815260040180806020018281038252602e815260200180613373602e913960400191505060405180910390fd5b6001600160a01b038216600090815260d86020908152604080832060d454845290915290205460d354610b0d908263ffffffff61266f16565b60d3819055610b22908363ffffffff6126b816565b60d39081556001600160a01b038416600081815260d86020908152604080832060d48054855290835292819020879055915460d55494548351948552918401879052838301526060830193909352608082019290925290517f335940ce4119f8aae891d73dba74510a3d51f6210134d058237f26e6a31d53409181900360a00190a1505050565b6001600160a01b0316600090815260d66020908152604080832060d454845290915290205460ff1690565b60d7546001600160a01b03163314610c2b576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b6001600160a01b038116600090815260d66020908152604080832060d454845290915290205460ff16610c8f5760405162461bcd60e51b81526004018080602001828103825260218152602001806132536021913960400191505060405180910390fd5b60d554610ca390600163ffffffff61266f16565b60d5556001600160a01b038116600090815260d86020908152604080832060d454845290915290205460d354610cde9163ffffffff61266f16565b60d39081556001600160a01b038216600081815260d66020908152604080832060d480548552908352818420805460ff1916905584845260d883528184208154855283528184208490555460d5549554825195865292850193909352838101929092526060830193909352608082019290925290517f1241fb43a101ff98ab819a1882097d4ccada51ba60f326c1981cc48840f55b8c9181900360a00190a150565b60d660209081526000928352604080842090915290825290205460ff1681565b6001600160a01b0316600090815260d86020908152604080832060d454845290915290205490565b60d7546001600160a01b031681565b610de033610ba9565b610e31576040805162461bcd60e51b815260206004820152601b60248201527f4d75737420626520616e206163746976652076616c696461746f720000000000604482015290519081900360640190fd5b600086868686868660405160200180876002811115610e4c57fe5b60ff1660f81b815260010186805190602001908083835b60208310610e825780518252601f199092019160209182019101610e63565b51815160209384036101000a60001901801990921691161790529201878152606087901b6bffffffffffffffffffffffff1916818401528551603490910192860191508083835b60208310610ee85780518252601f199092019160209182019101610ec9565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190528251920191909120965060009550610f3594508693506123ff92505050565b505090508015610f8c576040805162461bcd60e51b815260206004820152601160248201527f70726f7068656379436f6d706c65746564000000000000000000000000000000604482015290519081900360640190fd5b6000828152606d60205260409020546119a35760606001896002811115610faf57fe5b141561146957600480546040516373d8866560e01b815260209281018381528851602483015288516001600160a01b03909316936373d88665938a9383926044909101919085019080838360005b83811015611015578181015183820152602001610ffd565b50505050905090810190601f1680156110425780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561109c57600080fd5b81019080805160405193929190846401000000008211156110bc57600080fd5b9083019060208201858111156110d157600080fd5b82516401000000008111828201881017156110eb57600080fd5b82525081516020918201929091019080838360005b83811015611118578181015183820152602001611100565b50505050905090810190601f1680156111455780820380516001836020036101000a031916815260200191505b506040819052600480547f5acba65500000000000000000000000000000000000000000000000000000000835260209183018281528751602485015287519798508b976001600160a01b039092169650635acba65595508894509283926044909101919085019080838360005b838110156111ca5781810151838201526020016111b2565b50505050905090810190601f1680156111f75780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561121457600080fd5b505afa158015611228573d6000803e3d6000fd5b505050506040513d602081101561123e57600080fd5b5051101561127d5760405162461bcd60e51b815260040180806020018281038252603a8152602001806132df603a913960400191505060405180910390fd5b6004805460405163050fcdb360e11b815260209281018381528451602483015284516000946001600160a01b0390941693630a1f9b669387939283926044909201918501908083838b5b838110156112df5781810151838201526020016112c7565b50505050905090810190601f16801561130c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561132957600080fd5b505afa15801561133d573d6000803e3d6000fd5b505050506040513d602081101561135357600080fd5b505190506001600160a01b0381161580156114115750604080517f6574680000000000000000000000000000000000000000000000000000000000815290519081900360030181208351909184916020918201918291908401908083835b602083106113d05780518252601f1990920191602091820191016113b1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c14155b15611463576040805162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015290519081900360640190fd5b506118c8565b600289600281111561147757fe5b14156118915760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152611515939092909183018282801561150a5780601f106114df5761010080835404028352916020019161150a565b820191906000526020600020905b8154815290600101906020018083116114ed57829003601f168201915b505050505086612712565b600480546040516373d8866560e01b815260209281018381528451602483015284519495506001600160a01b03909216936373d8866593869392839260449091019185019080838360005b83811015611578578181015183820152602001611560565b50505050905090810190601f1680156115a55780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156115c257600080fd5b505afa1580156115d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156115ff57600080fd5b810190808051604051939291908464010000000082111561161f57600080fd5b90830190602082018581111561163457600080fd5b825164010000000081118282018810171561164e57600080fd5b82525081516020918201929091019080838360005b8381101561167b578181015183820152602001611663565b50505050905090810190601f1680156116a85780820380516001836020036101000a031916815260200191505b5060408190526004805463ebb73ca960e01b835260209183018281528751602485015287519798506000976001600160a01b03909216965063ebb73ca99550889450928392604490910191908501908083838b5b838110156117145781810151838201526020016116fc565b50505050905090810190601f1680156117415780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561175e57600080fd5b505afa158015611772573d6000803e3d6000fd5b505050506040513d602081101561178857600080fd5b505190506001600160a01b03811661146357600480546040517f50b06e4d00000000000000000000000000000000000000000000000000000000815260209281018381528551602483015285516001600160a01b03909316936350b06e4d93879383926044909101919085019080838360005b838110156118135781810151838201526020016117fb565b50505050905090810190601f1680156118405780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561185f57600080fd5b505af1158015611873573d6000803e3d6000fd5b505050506040513d602081101561188957600080fd5b5050506118c8565b60405162461bcd60e51b81526004018080602001828103825260358152602001806132aa6035913960400191505060405180910390fd5b7f4a5e641839ab01f64c7378be2bdcfe883606b326a7f4b46fc016690230dbd492838a8884886040518086815260200185600281111561190457fe5b60ff168152602001846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561196357818101518382015260200161194b565b50505050905090810190601f1680156119905780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505b60006119af83336127cd565b90508015611f5e57600060028a60028111156119c757fe5b1415611cdd5760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152611a659390929091830182828015611a5a5780601f10611a2f57610100808354040283529160200191611a5a565b820191906000526020600020905b815481529060010190602001808311611a3d57829003601f168201915b505050505087612712565b600480546040516373d8866560e01b81526020928101838152845160248301528451949a506001600160a01b03909216936373d88665938b9392839260449091019185019080838360005b83811015611ac8578181015183820152602001611ab0565b50505050905090810190601f168015611af55780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015611b1257600080fd5b505afa158015611b26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611b4f57600080fd5b8101908080516040519392919084640100000000821115611b6f57600080fd5b908301906020820185811115611b8457600080fd5b8251640100000000811182820188101715611b9e57600080fd5b82525081516020918201929091019080838360005b83811015611bcb578181015183820152602001611bb3565b50505050905090810190601f168015611bf85780820380516001836020036101000a031916815260200191505b5060408190526004805463ebb73ca960e01b83526020918301828152875160248501528751979d506001600160a01b039091169663ebb73ca996508d955090935083926044019185019080838360005b83811015611c60578181015183820152602001611c48565b50505050905090810190601f168015611c8d5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611caa57600080fd5b505afa158015611cbe573d6000803e3d6000fd5b505050506040513d6020811015611cd457600080fd5b50519050611f4e565b600480546040516373d8866560e01b815260209281018381528951602483015289516001600160a01b03909316936373d88665938b9383926044909101919085019080838360005b83811015611d3d578181015183820152602001611d25565b50505050905090810190601f168015611d6a5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015611d8757600080fd5b505afa158015611d9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611dc457600080fd5b8101908080516040519392919084640100000000821115611de457600080fd5b908301906020820185811115611df957600080fd5b8251640100000000811182820188101715611e1357600080fd5b82525081516020918201929091019080838360005b83811015611e40578181015183820152602001611e28565b50505050905090810190601f168015611e6d5780820380516001836020036101000a031916815260200191505b5060408190526004805463050fcdb360e11b83526020918301828152875160248501528751979d506001600160a01b0390911696630a1f9b6696508d955090935083926044019185019080838360005b83811015611ed5578181015183820152602001611ebd565b50505050905090810190601f168015611f025780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611f1f57600080fd5b505afa158015611f33573d6000803e3d6000fd5b505050506040513d6020811015611f4957600080fd5b505190505b611f5c84828c8a8a8a612968565b505b505050505050505050565b600454600160a01b900460ff1681565b6000888888888888888860405160200180896002811115611f9657fe5b60ff1660f81b8152600101888880828437919091018781526bffffffffffffffffffffffff19606088901b16602082015260340190508484808284379190910192835250506040805180830381526020928301909152805191012097505050505050505098975050505050505050565b6001600160a01b031660009081526101a3602052604090205490565b60d7546001600160a01b03163314612079576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b80518251146120b95760405162461bcd60e51b815260040180806020018281038252602f8152602001806133a1602f913960400191505060405180910390fd5b6120c16129ed565b60005b8251811015612115576120fd8382815181106120dc57fe5b60200260200101518383815181106120f057fe5b6020026020010151612a54565b61210e81600163ffffffff6126b816565b90506120c4565b5060d45460d55460d35460408051938452602084019290925282820152517f3a7ef0da3179668af8114719645585b5a37092ef2d66f187dcf63d83a221eaa69181900360600190a15050565b606d6020526000908152604090205481565b6003546001600160a01b031681565b6002546001600160a01b031681565b60d7546001600160a01b031633146121e8576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600454600160a01b900460ff16156122315760405162461bcd60e51b81526004018080602001828103825260368152602001806132746036913960400191505060405180910390fd5b60048054600160a01b60ff60a01b199091161773ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03838116919091179182905560408051929091168252517fc8b65043fb196ac032b79a435397d1d14a96b4e9d12e366c3b1f550cb01d2dfa916020908290030190a150565b60d860209081526000928352604080842090915290825290205481565b6122d33364174876e800612b22565b565b60d45481565b61013d5462010000900460ff1615612328576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b6040805180820190915260018082527f6500000000000000000000000000000000000000000000000000000000000000602090920191825261236c91600091613114565b5060d780546001600160a01b03861673ffffffffffffffffffffffffffffffffffffffff199091161790556004805460ff60a01b1916905561013d805462ff00001916620100001790556123c284848484612ba9565b50505050565b606e60209081526000928352604080842090915290825290205460ff1681565b60006123f5338484612cd4565b5060015b92915050565b60d3546000828152606d6020526040812054606c549192839283929190839061242f90839063ffffffff612d9116565b9050600061244484606463ffffffff612d9116565b828110159990985091965090945050505050565b606a546001600160a01b031681565b60d7546001600160a01b031633146124be576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b60d45482106124fe5760405162461bcd60e51b815260040180806020018281038252603581526020018061333e6035913960400191505060405180910390fd5b6001600160a01b0316600081815260d66020908152604080832060d480548552908352818420805460ff1916905593835260d88252808320935483529290529081205550565b60d35481565b6005602090815260009182526040918290208054600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582526001600160a01b039092169492939092908301828280156125f45780601f106125c9576101008083540402835291602001916125f4565b820191906000526020600020905b8154815290600101906020018083116125d757829003601f168201915b5050505050908060020154905083565b606c5481565b60d7546001600160a01b03163314612661576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b61266b8282612a54565b5050565b60006126b183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612dea565b9392505050565b6000828201838110156126b1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b606082826040516020018083805190602001908083835b602083106127485780518252601f199092019160209182019101612729565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106127905780518252601f199092019160209182019101612771565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6000828152606e602090815260408083206001600160a01b038516845290915281205460ff161561282f5760405162461bcd60e51b815260040180806020018281038252603a8152602001806131f8603a913960400191505060405180910390fd5b6000838152606e602090815260408083206001600160a01b03861680855290835292819020805460ff1916600117905580517f473691a40000000000000000000000000000000000000000000000000000000081526004810193909352516128fa92309263473691a492602480840193829003018186803b1580156128b357600080fd5b505afa1580156128c7573d6000803e3d6000fd5b505050506040513d60208110156128dd57600080fd5b50516000858152606d60205260409020549063ffffffff6126b816565b6000848152606d60209081526040918290209290925580518581526001600160a01b0385169281019290925280517f668fce9833323940537a9000d512a6c580a1c0797d2b526db0078ee9c5a087a99281900390910190a1600061295d846123ff565b509095945050505050565b600184600281111561297657fe5b141561298c57612987838383612e81565b612998565b61299883868484612f7a565b7f79e7c1c0bd54f11809c3bf6023c242783602d61ceff272c6bba6f8559c24ad0d8685604051808381526020018260028111156129d157fe5b60ff1681526020019250505060405180910390a1505050505050565b60d454612a0190600163ffffffff6126b816565b60d4819055600060d581905560d3819055604080519283526020830182905282810191909152517fd870653e19f161500290fd0c4ca41bf5cf2bcb1ba66448f41c66c512dabd65f29181900360600190a1565b60d554612a6890600163ffffffff6126b816565b60d55560d354612a7e908263ffffffff6126b816565b60d39081556001600160a01b038316600081815260d66020908152604080832060d480548552908352818420805460ff1916600117905584845260d8835281842081548552835292819020869055915460d55494548351948552918401869052838301526060830193909352608082019290925290517f1a396bcf647502e902dce665d58a0c1b25f982f193ab9a1d0f1500d8d927bf2a9181900360a00190a15050565b6001600160a01b038216612b7d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6101a28054820190556001600160a01b0390911660009081526101a36020526040902080549091019055565b61013d54610100900460ff1615612bf5576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b60008311612c345760405162461bcd60e51b81526004018080602001828103825260258152602001806131d36025913960400191505060405180910390fd5b6064831115612c8a576040805162461bcd60e51b815260206004820152601c60248201527f496e76616c696420636f6e73656e737573207468726573686f6c642e00000000604482015290519081900360640190fd5b60d780546001600160a01b03861673ffffffffffffffffffffffffffffffffffffffff19909116179055606c83905561013d805461ff0019166101001790556123c2848383613083565b6001600160a01b038316612d195760405162461bcd60e51b81526004018080602001828103825260258152602001806133196025913960400191505060405180910390fd5b6001600160a01b038216612d5e5760405162461bcd60e51b81526004018080602001828103825260238152602001806131b06023913960400191505060405180910390fd5b6001600160a01b0392831660009081526101a3602052604080822080548490039055929093168352912080549091019055565b600082612da0575060006123f9565b82820282848281612dad57fe5b04146126b15760405162461bcd60e51b81526004018080602001828103825260218152602001806132326021913960400191505060405180910390fd5b60008184841115612e795760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e3e578181015183820152602001612e26565b50505050905090810190601f168015612e6b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600480546040517fe05988a40000000000000000000000000000000000000000000000000000000081526001600160a01b0386811693820193845260448201859052606060248301908152865160648401528651919093169363e05988a493889388938893929160840190602086019080838360005b83811015612f0f578181015183820152602001612ef7565b50505050905090810190601f168015612f3c5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015612f5d57600080fd5b505af1158015612f71573d6000803e3d6000fd5b50505050505050565b600480546040517ffce0b8310000000000000000000000000000000000000000000000000000000081526001600160a01b03878116938201938452868116602483015260648201859052608060448301908152865160848401528651919093169363fce0b8319389938993899389939092909160a490910190602086019080838360005b83811015613016578181015183820152602001612ffe565b50505050905090810190601f1680156130435780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561306557600080fd5b505af1158015613079573d6000803e3d6000fd5b5050505050505050565b61013d5460ff16156130ca576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b60d7805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055600060d45561013d805460ff1916600117905561310f8282612022565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061315557805160ff1916838001178555613182565b82800160010185558215613182579182015b82811115613182578251825591602001919060010190613167565b5061318e929150613192565b5090565b6131ac91905b8082111561318e5760008155600101613198565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373436f6e73656e737573207468726573686f6c64206d75737420626520706f7369746976652e43616e6e6f74206d616b65206475706c6963617465206f7261636c6520636c61696d732066726f6d207468652073616d6520616464726573732e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e206f6e6c792072656d6f7665206163746976652076616c696461746f7273546865204272696467652042616e6b2063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574496e76616c696420636c61696d20747970652c206f6e6c79206275726e20616e64206c6f636b2061726520737570706f727465642e4e6f7420656e6f756768206c6f636b65642061737365747320746f20636f6d706c657465207468652070726f706f7365642070726f706865637945524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373476173207265636f76657279206f6e6c7920616c6c6f77656420666f722070726576696f75732076616c696461746f72207365747343616e206f6e6c79207570646174652074686520706f776572206f66206163746976652076616c646961746f727345766572792076616c696461746f72206d7573742068617665206120636f72726573706f6e64696e6720706f776572a265627a7a72315820aa8d756f73461585fd1ad95a1f84380f67fef8b81b1158454f1083f9ab3c048264736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80637f54af0c11610104578063a9059cbb116100a2578063db3ad22c11610071578063db3ad22c1461091d578063db4237af14610925578063f9b0b5b9146109d0578063fc6c1f02146109d8576101da565b8063a9059cbb14610880578063aef6ac3a146108ac578063b0e9ef71146108e9578063b5672be3146108f1576101da565b806389eb068a116100de57806389eb068a146107085780638d56c37d146107105780639a19224f14610718578063a219763e14610854576101da565b80637f54af0c146106ae578063814c92c3146106b6578063850f43dd146106dc576101da565b8063570ca7351161017c57806370a082311161014b57806370a082311461053c578063788cf92f1461056257806378ffb1c6146106895780637dc0d1d0146106a6576101da565b8063570ca735146102fd5780635d4c66a31461030557806369294a4e146104535780636e850da41461045b576101da565b806340550a1c116101b857806340550a1c1461024b57806340a141ff1461028557806345aaf18c146102ab578063473691a4146102d7576101da565b80630e41f373146101df5780630f43a677146102035780632e75293b1461021d575b600080fd5b6101e7610a04565b604080516001600160a01b039092168252519081900360200190f35b61020b610a13565b60408051918252519081900360200190f35b6102496004803603604081101561023357600080fd5b506001600160a01b038135169060200135610a19565b005b6102716004803603602081101561026157600080fd5b50356001600160a01b0316610ba9565b604080519115158252519081900360200190f35b6102496004803603602081101561029b57600080fd5b50356001600160a01b0316610bd4565b610271600480360360408110156102c157600080fd5b506001600160a01b038135169060200135610d80565b61020b600480360360208110156102ed57600080fd5b50356001600160a01b0316610da0565b6101e7610dc8565b610249600480360360c081101561031b57600080fd5b60ff823516919081019060408101602082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b03602087013516959194509250606081019150604001356401000000008111156103dc57600080fd5b8201836020820111156103ee57600080fd5b8035906020019184600183028401116401000000008311171561041057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610dd7915050565b610271611f69565b61020b600480360360c081101561047157600080fd5b60ff823516919081019060408101602082013564010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b919390928235926001600160a01b036020820135169291906060810190604001356401000000008111156104fd57600080fd5b82018360208201111561050f57600080fd5b8035906020019184600183028401116401000000008311171561053157600080fd5b919350915035611f79565b61020b6004803603602081101561055257600080fd5b50356001600160a01b0316612006565b6102496004803603604081101561057857600080fd5b81019060208101813564010000000081111561059357600080fd5b8201836020820111156105a557600080fd5b803590602001918460208302840111640100000000831117156105c757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561061757600080fd5b82018360208201111561062957600080fd5b8035906020019184602083028401116401000000008311171561064b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612022945050505050565b61020b6004803603602081101561069f57600080fd5b5035612161565b6101e7612173565b6101e7612182565b610249600480360360208110156106cc57600080fd5b50356001600160a01b0316612191565b61020b600480360360408110156106f257600080fd5b506001600160a01b0381351690602001356122a7565b6102496122c4565b61020b6122d5565b6102496004803603608081101561072e57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561075e57600080fd5b82018360208201111561077057600080fd5b8035906020019184602083028401116401000000008311171561079257600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156107e257600080fd5b8201836020820111156107f457600080fd5b8035906020019184602083028401116401000000008311171561081657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506122db945050505050565b6102716004803603604081101561086a57600080fd5b50803590602001356001600160a01b03166123c8565b6102716004803603604081101561089657600080fd5b506001600160a01b0381351690602001356123e8565b6108c9600480360360208110156108c257600080fd5b50356123ff565b604080519315158452602084019290925282820152519081900360600190f35b6101e7612458565b6102496004803603604081101561090757600080fd5b50803590602001356001600160a01b0316612467565b61020b612544565b6109426004803603602081101561093b57600080fd5b503561254a565b604080516001600160a01b0385168152908101829052606060208083018281528551928401929092528451608084019186019080838360005b8381101561099357818101518382015260200161097b565b50505050905090810190601f1680156109c05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61020b612604565b610249600480360360408110156109ee57600080fd5b506001600160a01b03813516906020013561260a565b6004546001600160a01b031681565b60d55481565b60d7546001600160a01b03163314610a70576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b6001600160a01b038216600090815260d66020908152604080832060d454845290915290205460ff16610ad45760405162461bcd60e51b815260040180806020018281038252602e815260200180613373602e913960400191505060405180910390fd5b6001600160a01b038216600090815260d86020908152604080832060d454845290915290205460d354610b0d908263ffffffff61266f16565b60d3819055610b22908363ffffffff6126b816565b60d39081556001600160a01b038416600081815260d86020908152604080832060d48054855290835292819020879055915460d55494548351948552918401879052838301526060830193909352608082019290925290517f335940ce4119f8aae891d73dba74510a3d51f6210134d058237f26e6a31d53409181900360a00190a1505050565b6001600160a01b0316600090815260d66020908152604080832060d454845290915290205460ff1690565b60d7546001600160a01b03163314610c2b576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b6001600160a01b038116600090815260d66020908152604080832060d454845290915290205460ff16610c8f5760405162461bcd60e51b81526004018080602001828103825260218152602001806132536021913960400191505060405180910390fd5b60d554610ca390600163ffffffff61266f16565b60d5556001600160a01b038116600090815260d86020908152604080832060d454845290915290205460d354610cde9163ffffffff61266f16565b60d39081556001600160a01b038216600081815260d66020908152604080832060d480548552908352818420805460ff1916905584845260d883528184208154855283528184208490555460d5549554825195865292850193909352838101929092526060830193909352608082019290925290517f1241fb43a101ff98ab819a1882097d4ccada51ba60f326c1981cc48840f55b8c9181900360a00190a150565b60d660209081526000928352604080842090915290825290205460ff1681565b6001600160a01b0316600090815260d86020908152604080832060d454845290915290205490565b60d7546001600160a01b031681565b610de033610ba9565b610e31576040805162461bcd60e51b815260206004820152601b60248201527f4d75737420626520616e206163746976652076616c696461746f720000000000604482015290519081900360640190fd5b600086868686868660405160200180876002811115610e4c57fe5b60ff1660f81b815260010186805190602001908083835b60208310610e825780518252601f199092019160209182019101610e63565b51815160209384036101000a60001901801990921691161790529201878152606087901b6bffffffffffffffffffffffff1916818401528551603490910192860191508083835b60208310610ee85780518252601f199092019160209182019101610ec9565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190528251920191909120965060009550610f3594508693506123ff92505050565b505090508015610f8c576040805162461bcd60e51b815260206004820152601160248201527f70726f7068656379436f6d706c65746564000000000000000000000000000000604482015290519081900360640190fd5b6000828152606d60205260409020546119a35760606001896002811115610faf57fe5b141561146957600480546040516373d8866560e01b815260209281018381528851602483015288516001600160a01b03909316936373d88665938a9383926044909101919085019080838360005b83811015611015578181015183820152602001610ffd565b50505050905090810190601f1680156110425780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561109c57600080fd5b81019080805160405193929190846401000000008211156110bc57600080fd5b9083019060208201858111156110d157600080fd5b82516401000000008111828201881017156110eb57600080fd5b82525081516020918201929091019080838360005b83811015611118578181015183820152602001611100565b50505050905090810190601f1680156111455780820380516001836020036101000a031916815260200191505b506040819052600480547f5acba65500000000000000000000000000000000000000000000000000000000835260209183018281528751602485015287519798508b976001600160a01b039092169650635acba65595508894509283926044909101919085019080838360005b838110156111ca5781810151838201526020016111b2565b50505050905090810190601f1680156111f75780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561121457600080fd5b505afa158015611228573d6000803e3d6000fd5b505050506040513d602081101561123e57600080fd5b5051101561127d5760405162461bcd60e51b815260040180806020018281038252603a8152602001806132df603a913960400191505060405180910390fd5b6004805460405163050fcdb360e11b815260209281018381528451602483015284516000946001600160a01b0390941693630a1f9b669387939283926044909201918501908083838b5b838110156112df5781810151838201526020016112c7565b50505050905090810190601f16801561130c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561132957600080fd5b505afa15801561133d573d6000803e3d6000fd5b505050506040513d602081101561135357600080fd5b505190506001600160a01b0381161580156114115750604080517f6574680000000000000000000000000000000000000000000000000000000000815290519081900360030181208351909184916020918201918291908401908083835b602083106113d05780518252601f1990920191602091820191016113b1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c14155b15611463576040805162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015290519081900360640190fd5b506118c8565b600289600281111561147757fe5b14156118915760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152611515939092909183018282801561150a5780601f106114df5761010080835404028352916020019161150a565b820191906000526020600020905b8154815290600101906020018083116114ed57829003601f168201915b505050505086612712565b600480546040516373d8866560e01b815260209281018381528451602483015284519495506001600160a01b03909216936373d8866593869392839260449091019185019080838360005b83811015611578578181015183820152602001611560565b50505050905090810190601f1680156115a55780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b1580156115c257600080fd5b505afa1580156115d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156115ff57600080fd5b810190808051604051939291908464010000000082111561161f57600080fd5b90830190602082018581111561163457600080fd5b825164010000000081118282018810171561164e57600080fd5b82525081516020918201929091019080838360005b8381101561167b578181015183820152602001611663565b50505050905090810190601f1680156116a85780820380516001836020036101000a031916815260200191505b5060408190526004805463ebb73ca960e01b835260209183018281528751602485015287519798506000976001600160a01b03909216965063ebb73ca99550889450928392604490910191908501908083838b5b838110156117145781810151838201526020016116fc565b50505050905090810190601f1680156117415780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561175e57600080fd5b505afa158015611772573d6000803e3d6000fd5b505050506040513d602081101561178857600080fd5b505190506001600160a01b03811661146357600480546040517f50b06e4d00000000000000000000000000000000000000000000000000000000815260209281018381528551602483015285516001600160a01b03909316936350b06e4d93879383926044909101919085019080838360005b838110156118135781810151838201526020016117fb565b50505050905090810190601f1680156118405780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561185f57600080fd5b505af1158015611873573d6000803e3d6000fd5b505050506040513d602081101561188957600080fd5b5050506118c8565b60405162461bcd60e51b81526004018080602001828103825260358152602001806132aa6035913960400191505060405180910390fd5b7f4a5e641839ab01f64c7378be2bdcfe883606b326a7f4b46fc016690230dbd492838a8884886040518086815260200185600281111561190457fe5b60ff168152602001846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561196357818101518382015260200161194b565b50505050905090810190601f1680156119905780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505b60006119af83336127cd565b90508015611f5e57600060028a60028111156119c757fe5b1415611cdd5760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152611a659390929091830182828015611a5a5780601f10611a2f57610100808354040283529160200191611a5a565b820191906000526020600020905b815481529060010190602001808311611a3d57829003601f168201915b505050505087612712565b600480546040516373d8866560e01b81526020928101838152845160248301528451949a506001600160a01b03909216936373d88665938b9392839260449091019185019080838360005b83811015611ac8578181015183820152602001611ab0565b50505050905090810190601f168015611af55780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015611b1257600080fd5b505afa158015611b26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611b4f57600080fd5b8101908080516040519392919084640100000000821115611b6f57600080fd5b908301906020820185811115611b8457600080fd5b8251640100000000811182820188101715611b9e57600080fd5b82525081516020918201929091019080838360005b83811015611bcb578181015183820152602001611bb3565b50505050905090810190601f168015611bf85780820380516001836020036101000a031916815260200191505b5060408190526004805463ebb73ca960e01b83526020918301828152875160248501528751979d506001600160a01b039091169663ebb73ca996508d955090935083926044019185019080838360005b83811015611c60578181015183820152602001611c48565b50505050905090810190601f168015611c8d5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611caa57600080fd5b505afa158015611cbe573d6000803e3d6000fd5b505050506040513d6020811015611cd457600080fd5b50519050611f4e565b600480546040516373d8866560e01b815260209281018381528951602483015289516001600160a01b03909316936373d88665938b9383926044909101919085019080838360005b83811015611d3d578181015183820152602001611d25565b50505050905090810190601f168015611d6a5780820380516001836020036101000a031916815260200191505b509250505060006040518083038186803b158015611d8757600080fd5b505afa158015611d9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611dc457600080fd5b8101908080516040519392919084640100000000821115611de457600080fd5b908301906020820185811115611df957600080fd5b8251640100000000811182820188101715611e1357600080fd5b82525081516020918201929091019080838360005b83811015611e40578181015183820152602001611e28565b50505050905090810190601f168015611e6d5780820380516001836020036101000a031916815260200191505b5060408190526004805463050fcdb360e11b83526020918301828152875160248501528751979d506001600160a01b0390911696630a1f9b6696508d955090935083926044019185019080838360005b83811015611ed5578181015183820152602001611ebd565b50505050905090810190601f168015611f025780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015611f1f57600080fd5b505afa158015611f33573d6000803e3d6000fd5b505050506040513d6020811015611f4957600080fd5b505190505b611f5c84828c8a8a8a612968565b505b505050505050505050565b600454600160a01b900460ff1681565b6000888888888888888860405160200180896002811115611f9657fe5b60ff1660f81b8152600101888880828437919091018781526bffffffffffffffffffffffff19606088901b16602082015260340190508484808284379190910192835250506040805180830381526020928301909152805191012097505050505050505098975050505050505050565b6001600160a01b031660009081526101a3602052604090205490565b60d7546001600160a01b03163314612079576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b80518251146120b95760405162461bcd60e51b815260040180806020018281038252602f8152602001806133a1602f913960400191505060405180910390fd5b6120c16129ed565b60005b8251811015612115576120fd8382815181106120dc57fe5b60200260200101518383815181106120f057fe5b6020026020010151612a54565b61210e81600163ffffffff6126b816565b90506120c4565b5060d45460d55460d35460408051938452602084019290925282820152517f3a7ef0da3179668af8114719645585b5a37092ef2d66f187dcf63d83a221eaa69181900360600190a15050565b606d6020526000908152604090205481565b6003546001600160a01b031681565b6002546001600160a01b031681565b60d7546001600160a01b031633146121e8576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600454600160a01b900460ff16156122315760405162461bcd60e51b81526004018080602001828103825260368152602001806132746036913960400191505060405180910390fd5b60048054600160a01b60ff60a01b199091161773ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03838116919091179182905560408051929091168252517fc8b65043fb196ac032b79a435397d1d14a96b4e9d12e366c3b1f550cb01d2dfa916020908290030190a150565b60d860209081526000928352604080842090915290825290205481565b6122d33364174876e800612b22565b565b60d45481565b61013d5462010000900460ff1615612328576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b6040805180820190915260018082527f6500000000000000000000000000000000000000000000000000000000000000602090920191825261236c91600091613114565b5060d780546001600160a01b03861673ffffffffffffffffffffffffffffffffffffffff199091161790556004805460ff60a01b1916905561013d805462ff00001916620100001790556123c284848484612ba9565b50505050565b606e60209081526000928352604080842090915290825290205460ff1681565b60006123f5338484612cd4565b5060015b92915050565b60d3546000828152606d6020526040812054606c549192839283929190839061242f90839063ffffffff612d9116565b9050600061244484606463ffffffff612d9116565b828110159990985091965090945050505050565b606a546001600160a01b031681565b60d7546001600160a01b031633146124be576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b60d45482106124fe5760405162461bcd60e51b815260040180806020018281038252603581526020018061333e6035913960400191505060405180910390fd5b6001600160a01b0316600081815260d66020908152604080832060d480548552908352818420805460ff1916905593835260d88252808320935483529290529081205550565b60d35481565b6005602090815260009182526040918290208054600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582526001600160a01b039092169492939092908301828280156125f45780601f106125c9576101008083540402835291602001916125f4565b820191906000526020600020905b8154815290600101906020018083116125d757829003601f168201915b5050505050908060020154905083565b606c5481565b60d7546001600160a01b03163314612661576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b61266b8282612a54565b5050565b60006126b183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612dea565b9392505050565b6000828201838110156126b1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b606082826040516020018083805190602001908083835b602083106127485780518252601f199092019160209182019101612729565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106127905780518252601f199092019160209182019101612771565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6000828152606e602090815260408083206001600160a01b038516845290915281205460ff161561282f5760405162461bcd60e51b815260040180806020018281038252603a8152602001806131f8603a913960400191505060405180910390fd5b6000838152606e602090815260408083206001600160a01b03861680855290835292819020805460ff1916600117905580517f473691a40000000000000000000000000000000000000000000000000000000081526004810193909352516128fa92309263473691a492602480840193829003018186803b1580156128b357600080fd5b505afa1580156128c7573d6000803e3d6000fd5b505050506040513d60208110156128dd57600080fd5b50516000858152606d60205260409020549063ffffffff6126b816565b6000848152606d60209081526040918290209290925580518581526001600160a01b0385169281019290925280517f668fce9833323940537a9000d512a6c580a1c0797d2b526db0078ee9c5a087a99281900390910190a1600061295d846123ff565b509095945050505050565b600184600281111561297657fe5b141561298c57612987838383612e81565b612998565b61299883868484612f7a565b7f79e7c1c0bd54f11809c3bf6023c242783602d61ceff272c6bba6f8559c24ad0d8685604051808381526020018260028111156129d157fe5b60ff1681526020019250505060405180910390a1505050505050565b60d454612a0190600163ffffffff6126b816565b60d4819055600060d581905560d3819055604080519283526020830182905282810191909152517fd870653e19f161500290fd0c4ca41bf5cf2bcb1ba66448f41c66c512dabd65f29181900360600190a1565b60d554612a6890600163ffffffff6126b816565b60d55560d354612a7e908263ffffffff6126b816565b60d39081556001600160a01b038316600081815260d66020908152604080832060d480548552908352818420805460ff1916600117905584845260d8835281842081548552835292819020869055915460d55494548351948552918401869052838301526060830193909352608082019290925290517f1a396bcf647502e902dce665d58a0c1b25f982f193ab9a1d0f1500d8d927bf2a9181900360a00190a15050565b6001600160a01b038216612b7d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6101a28054820190556001600160a01b0390911660009081526101a36020526040902080549091019055565b61013d54610100900460ff1615612bf5576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b60008311612c345760405162461bcd60e51b81526004018080602001828103825260258152602001806131d36025913960400191505060405180910390fd5b6064831115612c8a576040805162461bcd60e51b815260206004820152601c60248201527f496e76616c696420636f6e73656e737573207468726573686f6c642e00000000604482015290519081900360640190fd5b60d780546001600160a01b03861673ffffffffffffffffffffffffffffffffffffffff19909116179055606c83905561013d805461ff0019166101001790556123c2848383613083565b6001600160a01b038316612d195760405162461bcd60e51b81526004018080602001828103825260258152602001806133196025913960400191505060405180910390fd5b6001600160a01b038216612d5e5760405162461bcd60e51b81526004018080602001828103825260238152602001806131b06023913960400191505060405180910390fd5b6001600160a01b0392831660009081526101a3602052604080822080548490039055929093168352912080549091019055565b600082612da0575060006123f9565b82820282848281612dad57fe5b04146126b15760405162461bcd60e51b81526004018080602001828103825260218152602001806132326021913960400191505060405180910390fd5b60008184841115612e795760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e3e578181015183820152602001612e26565b50505050905090810190601f168015612e6b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600480546040517fe05988a40000000000000000000000000000000000000000000000000000000081526001600160a01b0386811693820193845260448201859052606060248301908152865160648401528651919093169363e05988a493889388938893929160840190602086019080838360005b83811015612f0f578181015183820152602001612ef7565b50505050905090810190601f168015612f3c5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015612f5d57600080fd5b505af1158015612f71573d6000803e3d6000fd5b50505050505050565b600480546040517ffce0b8310000000000000000000000000000000000000000000000000000000081526001600160a01b03878116938201938452868116602483015260648201859052608060448301908152865160848401528651919093169363fce0b8319389938993899389939092909160a490910190602086019080838360005b83811015613016578181015183820152602001612ffe565b50505050905090810190601f1680156130435780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561306557600080fd5b505af1158015613079573d6000803e3d6000fd5b5050505050505050565b61013d5460ff16156130ca576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b60d7805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055600060d45561013d805460ff1916600117905561310f8282612022565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061315557805160ff1916838001178555613182565b82800160010185558215613182579182015b82811115613182578251825591602001919060010190613167565b5061318e929150613192565b5090565b6131ac91905b8082111561318e5760008155600101613198565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373436f6e73656e737573207468726573686f6c64206d75737420626520706f7369746976652e43616e6e6f74206d616b65206475706c6963617465206f7261636c6520636c61696d732066726f6d207468652073616d6520616464726573732e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e206f6e6c792072656d6f7665206163746976652076616c696461746f7273546865204272696467652042616e6b2063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574496e76616c696420636c61696d20747970652c206f6e6c79206275726e20616e64206c6f636b2061726520737570706f727465642e4e6f7420656e6f756768206c6f636b65642061737365747320746f20636f6d706c657465207468652070726f706f7365642070726f706865637945524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373476173207265636f76657279206f6e6c7920616c6c6f77656420666f722070726576696f75732076616c696461746f72207365747343616e206f6e6c79207570646174652074686520706f776572206f66206163746976652076616c646961746f727345766572792076616c696461746f72206d7573742068617665206120636f72726573706f6e64696e6720706f776572a265627a7a72315820aa8d756f73461585fd1ad95a1f84380f67fef8b81b1158454f1083f9ab3c048264736f6c63430005100032",
  "sourceMap": "2133:149:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:149:17;;;;;;;",
  "deployedSourceMap": "2133:149:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:149:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:33:15;;;:::i;:::-;;;;-1:-1:-1;;;;;620:33:15;;;;;;;;;;;;;;285:29:21;;;:::i;:::-;;;;;;;;;;;;;;;;1985:842:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1985:842:20;;;;;;;;:::i;:::-;;4209:257;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4209:257:20;-1:-1:-1;;;;;4209:257:20;;:::i;:::-;;;;;;;;;;;;;;;;;;2877:719;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2877:719:20;-1:-1:-1;;;;;2877:719:20;;:::i;381:62:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;381:62:21;;;;;;;;:::i;4518:185:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4518:185:20;-1:-1:-1;;;;;4518:185:20;;:::i;496:23:21:-;;;:::i;2915:3004:14:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2915:3004:14;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2915:3004:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2915:3004:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2915:3004:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2915:3004:14;;;;;-1:-1:-1;;;;;2915:3004:14;;;;;;;;-1:-1:-1;2915:3004:14;-1:-1:-1;2915:3004:14;;;;-1:-1:-1;2915:3004:14;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2915:3004:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2915:3004:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2915:3004:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2915:3004:14;;-1:-1:-1;;2915:3004:14;;;-1:-1:-1;2915:3004:14;;-1:-1:-1;;2915:3004:14:i;728:25:15:-;;;:::i;2142:416:14:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2142:416:14;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2142:416:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2142:416:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2142:416:14;;;;;;;-1:-1:-1;;;;;2142:416:14;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2142:416:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2142:416:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2142:416:14;;-1:-1:-1;2142:416:14;-1:-1:-1;2142:416:14;;:::i;224:108:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;224:108:17;-1:-1:-1;;;;;224:108:17;;:::i;3643:514:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3643:514:20;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3643:514:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3643:514:20;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3643:514:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3643:514:20;;;;;;;;-1:-1:-1;3643:514:20;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;3643:514:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3643:514:20;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3643:514:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3643:514:20;;-1:-1:-1;3643:514:20;;-1:-1:-1;;;;;3643:514:20:i;523:56:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;523:56:19;;:::i;516:29:15:-;;;:::i;412:::-;;;:::i;1823:313:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1823:313:14;-1:-1:-1;;;;;1823:313:14;;:::i;620:61:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;620:61:21;;;;;;;;:::i;2202:78:17:-;;;:::i;198:35:21:-;;;:::i;1263:512:14:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1263:512:14;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1263:512:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1263:512:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1263:512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1263:512:14;;;;;;;;-1:-1:-1;1263:512:14;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;1263:512:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1263:512:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1263:512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1263:512:14;;-1:-1:-1;1263:512:14;;-1:-1:-1;;;;;1263:512:14:i;669:64:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;669:64:19;;;;;;-1:-1:-1;;;;;669:64:19;;:::i;535:153:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;535:153:17;;;;;;;;:::i;2813:826:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2813:826:18;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;111:27:19;;;:::i;4748:451:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4748:451:20;;;;;;-1:-1:-1;;;;;4748:451:20;;:::i;114:25:21:-;;;:::i;824:55:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;824:55:15;;:::i;:::-;;;;-1:-1:-1;;;;;824:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;824:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:33:19;;;:::i;1743:187:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1743:187:20;;;;;;;;:::i;620:33:15:-;;;-1:-1:-1;;;;;620:33:15;;:::o;285:29:21:-;;;;:::o;1985:842:20:-;918:8:14;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;2144:29:20;;;;;;:10;:29;;;;;;;;2174:20;;2144:51;;;;;;;;;;2123:144;;;;-1:-1:-1;;;2123:144:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2352:25:20;;2331:18;2352:25;;;:6;:25;;;;;;;;2378:20;;2352:47;;;;;;;;2422:10;;:26;;2352:47;2422:26;:14;:26;:::i;:::-;2409:10;:39;;;2471:34;;2486:18;2471:34;:14;:34;:::i;:::-;2458:10;:47;;;-1:-1:-1;;;;;2553:25:20;;;;;;:6;:25;;;;;;;;2579:20;;;2553:47;;;;;;;;;:68;;;2738:20;;2772:14;;2800:10;;2637:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:1:14;1985:842:20;;:::o;4209:257::-;-1:-1:-1;;;;;4408:29:20;4308:4;4408:29;;;:10;:29;;;;;;;;4438:20;;4408:51;;;;;;;;;;;4209:257::o;2877:719::-;918:8:14;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;2967:29:20;;;;;;:10;:29;;;;;;;;2997:20;;2967:51;;;;;;;;;;2959:97;;;;-1:-1:-1;;;2959:97:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3134:14;;:21;;3153:1;3134:21;:18;:21;:::i;:::-;3117:14;:38;-1:-1:-1;;;;;3193:25:20;;;;;;:6;:25;;;;;;;;3219:20;;3193:47;;;;;;;;3178:10;;:63;;;:14;:63;:::i;:::-;3165:10;:76;;;-1:-1:-1;;;;;3297:29:20;;;;;;:10;:29;;;;;;;;3327:20;;;3297:51;;;;;;;;3290:58;;-1:-1:-1;;3290:58:20;;;3365:25;;;:6;:25;;;;;3391:20;;3365:47;;;;;;;3358:54;;;3507:20;3541:14;;3569:10;;3428:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2877:719;:::o;381:62:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4518:185:20:-;-1:-1:-1;;;;;4649:25:20;4619:7;4649:25;;;:6;:25;;;;;;;;4675:20;;4649:47;;;;;;;;;4518:185::o;496:23:21:-;;;-1:-1:-1;;;;;496:23:21;;:::o;2915:3004:14:-;1117:29;1135:10;1117:17;:29::i;:::-;1096:103;;;;;-1:-1:-1;;;1096:103:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3182:19;3239:10;3251:13;3266:21;3289:17;3308:7;3317;3222:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3222:103:14;;;;;;;;;-1:-1:-1;;3222:103:14;;;;;;;;;;;;;;;-1:-1:-1;3222:103:14;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3222:103:14;;;;;-1:-1:-1;3222:103:14;;;26:21:-1;;;6:49;;3222:103:14;;;;;3212:114;;;;;;;;;-1:-1:-1;;;;3368:33:14;;-1:-1:-1;3212:114:14;;-1:-1:-1;3368:20:14;;-1:-1:-1;;;3368:33:14:i;:::-;3337:64;;;;3420:17;3419:18;3411:48;;;;;-1:-1:-1;;;3411:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3474:34;;;;:21;:34;;;;;;3470:1594;;3529:20;3581:14;3567:10;:28;;;;;;;;;3563:1297;;;3635:10;;;3624:54;;-1:-1:-1;;;3624:54:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3635:10:14;;;;3624:45;;3670:7;;3624:54;;;;;;;;;;;;;;3635:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3624:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3624:54:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3624:54:14;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3624:54:14;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3624:54:14;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3624:54:14;;420:4:-1;411:14;;;;3624:54:14;;;;;411:14:-1;3624:54:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3624:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3624:54:14;;;;3736:10;;;3725:45;;;;;;;;;;;;;;;;;;3615:63;;-1:-1:-1;3774:7:14;;-1:-1:-1;;;;;3736:10:14;;;;-1:-1:-1;3725:37:14;;-1:-1:-1;3615:63:14;;-1:-1:-1;3725:45:14;;;;;;;;;;;;;;;3736:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3725:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3725:45:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3725:45:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3725:45:14;:56;;3696:185;;;;-1:-1:-1;;;3696:185:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:10;;;3922:52;;-1:-1:-1;;;3922:52:14;;;;;;;;;;;;;;;;;3899:20;;-1:-1:-1;;;;;3933:10:14;;;;3922:44;;3967:6;;3922:52;;;;;;;;;;;;;;3899:20;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3922:52:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3922:52:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3922:52:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3922:52:14;;-1:-1:-1;;;;;;3996:26:14;;;:103;;;;-1:-1:-1;4082:16:14;;;;;;;;;;;;;;;;4044:24;;4082:16;;4061:6;;4044:24;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4044:24:14;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4044:24:14;;;4034:35;;;;;;4026:44;;:73;;3996:103;3992:181;;;4123:31;;;-1:-1:-1;;;4123:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:181;3563:1297;;;;4211:14;4197:10;:28;;;;;;;;;4193:667;;;4261:26;4254:43;;;;;;;;-1:-1:-1;;4254:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:26;;4254:43;;4261:26;4254:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4289:7;4254:6;:43::i;:::-;4360:10;;;4349:53;;-1:-1:-1;;;4349:53:14;;;;;;;;;;;;;;;;;4245:52;;-1:-1:-1;;;;;;4360:10:14;;;;4349:45;;4245:52;;4349:53;;;;;;;;;;;;;;4360:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4349:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4349:53:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4349:53:14;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4349:53:14;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;4349:53:14;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;4349:53:14;;420:4:-1;411:14;;;;4349:53:14;;;;;411:14:-1;4349:53:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4349:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4349:53:14;;;;4460:10;;;-1:-1:-1;;;4449:45:14;;;;;;;;;;;;;;;;;4340:62;;-1:-1:-1;4420:26:14;;-1:-1:-1;;;;;4460:10:14;;;;-1:-1:-1;4449:37:14;;-1:-1:-1;4340:62:14;;-1:-1:-1;4449:45:14;;;;;;;;;;;;;;;4420:26;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4449:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4449:45:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4449:45:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4449:45:14;;-1:-1:-1;;;;;;4516:32:14;;4512:232;;4685:10;;;4674:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4685:10:14;;;;4674:43;;4718:6;;4674:51;;;;;;;;;;;;;;4685:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4674:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4674:51:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4674:51:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4193:667:14;;;;4782:63;;-1:-1:-1;;;4782:63:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4193:667;4879:174;4916:11;4945:10;4973:17;5008:6;5032:7;4879:174;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4879:174:14;-1:-1:-1;;;;;4879:174:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4879:174:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:1594;;5074:18;5095:39;5110:11;5123:10;5095:14;:39::i;:::-;5074:60;;5149:13;5145:768;;;5178:20;5230:14;5216:10;:28;;;;;;;;;5212:470;;;5281:26;5274:43;;;;;;;;-1:-1:-1;;5274:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5281:26;;5274:43;;5281:26;5274:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5309:7;5274:6;:43::i;:::-;5356:10;;;5345:54;;-1:-1:-1;;;5345:54:14;;;;;;;;;;;;;;;;;5264:53;;-1:-1:-1;;;;;;5356:10:14;;;;5345:45;;5264:53;;5345:54;;;;;;;;;;;;;;5356:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5345:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5345:54:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5345:54:14;;;;;;39:16:-1;36:1;17:17;2:54;101:4;5345:54:14;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;5345:54:14;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;5345:54:14;;420:4:-1;411:14;;;;5345:54:14;;;;;411:14:-1;5345:54:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5345:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5345:54:14;;;;5443:10;;;-1:-1:-1;;;5432:46:14;;;;;;;;;;;;;;;;;5335:64;;-1:-1:-1;;;;;;5443:10:14;;;;5432:37;;-1:-1:-1;5335:64:14;;-1:-1:-1;5432:46:14;;-1:-1:-1;5432:46:14;;;;;;;;;;;5443:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5432:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5432:46:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5432:46:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5432:46:14;;-1:-1:-1;5212:470:14;;;5538:10;;;5527:54;;-1:-1:-1;;;5527:54:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5538:10:14;;;;5527:45;;5573:7;;5527:54;;;;;;;;;;;;;;5538:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5527:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5527:54:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5527:54:14;;;;;;39:16:-1;36:1;17:17;2:54;101:4;5527:54:14;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;5527:54:14;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;5527:54:14;;420:4:-1;411:14;;;;5527:54:14;;;;;411:14:-1;5527:54:14;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5527:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5527:54:14;;;;5625:10;;;-1:-1:-1;;;5614:53:14;;;;;;;;;;;;;;;;;5517:64;;-1:-1:-1;;;;;;5625:10:14;;;;5614:44;;-1:-1:-1;5517:64:14;;-1:-1:-1;5614:53:14;;-1:-1:-1;5614:53:14;;;;;;;;;;;5625:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5614:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5614:53:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5614:53:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5614:53:14;;-1:-1:-1;5212:470:14;5695:207;5734:11;5763:12;5793:10;5821:17;5856:7;5881;5695:21;:207::i;:::-;5145:768;;1209:1;;;2915:3004;;;;;;:::o;728:25:15:-;;;-1:-1:-1;;;728:25:15;;;;;:::o;2142:416:14:-;2402:7;2463:10;2475:13;;2490:21;2513:17;2532:7;;2541;2446:103;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;45:16;;;;2446:103:14;;;-1:-1:-1;;2446:103:14;;;;;;;;;;;;-1:-1:-1;2446:103:14;;;;;1:33:-1;45:16;;;;2446:103:14;;;-1:-1:-1;;2446:103:14;;;26:21:-1;;;6:49;;2446:103:14;;;;;;;2436:114;;;;;;-1:-1:-1;;;;;;;;2142:416:14;;;;;;;;;;:::o;224:108:17:-;-1:-1:-1;;;;;307:18:17;281:7;307:18;;;:9;:18;;;;;;;224:108::o;3643:514:20:-;918:8:14;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;3816:7:20;:14;3794:11;:18;:36;3773:130;;;;-1:-1:-1;;;3773:130:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3914:13;:11;:13::i;:::-;3943:9;3938:131;3962:11;:18;3958:1;:22;3938:131;;;4010:48;4031:11;4043:1;4031:14;;;;;;;;;;;;;;4047:7;4055:1;4047:10;;;;;;;;;;;;;;4010:20;:48::i;:::-;3986:8;:1;3992;3986:8;:5;:8;:::i;:::-;3982:12;;3938:131;;;-1:-1:-1;4101:20:20;;4123:14;;4139:10;;4084:66;;;;;;;;;;;;;;;;;;;;;;;;;;;3643:514;;:::o;523:56:19:-;;;;;;;;;;;;;:::o;516:29:15:-;;;-1:-1:-1;;;;;516:29:15;;:::o;412:::-;;;-1:-1:-1;;;;;412:29:15;;:::o;1823:313:14:-;918:8;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;1927:13;;-1:-1:-1;;;1927:13:14;;;;1926:14;1905:115;;;;-1:-1:-1;;;1905:115:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2031:13;:20;;-1:-1:-1;;;;;;;2031:20:14;;;;-1:-1:-1;;2061:24:14;-1:-1:-1;;;;;2061:24:14;;;;;;;;;;;2101:28;;;2118:10;;;;2101:28;;;;;;;;;;;;;1823:313;:::o;620:61:21:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2202:78:17:-;2242:31;2248:10;2260:12;2242:5;:31::i;:::-;2202:78::o;198:35:21:-;;;;:::o;1263:512:14:-;1459:12;;;;;;;1458:13;1450:37;;;;;-1:-1:-1;;;1450:37:14;;;;;;;;;;;;-1:-1:-1;;;1450:37:14;;;;;;;;;;;;;;;1498:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1498:32:14;:::i;:::-;-1:-1:-1;1540:8:14;:20;;-1:-1:-1;;;;;1540:20:14;;-1:-1:-1;;1540:20:14;;;;;;1570:13;:21;;-1:-1:-1;;;;1570:21:14;;;1601:12;:19;;-1:-1:-1;;1601:19:14;;;;;1630:138;1551:9;1685:19;1718:15;1747:11;1630:18;:138::i;:::-;1263:512;;;;:::o;669:64:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;535:153:17:-;604:4;620:40;630:10;642:9;653:6;620:9;:40::i;:::-;-1:-1:-1;677:4:17;535:153;;;;;:::o;2813:826:18:-;3001:10;;2909:4;3036:34;;;:21;:34;;;;;;3218:18;;2909:4;;;;;;3036:34;3001:10;2909:4;;3203:34;;3001:10;;3203:34;:14;:34;:::i;:::-;3170:67;-1:-1:-1;3355:28:18;3386:20;:11;3402:3;3386:20;:15;:20;:::i;:::-;3443:58;;;;;;;-1:-1:-1;3443:58:18;;-1:-1:-1;2813:826:18;;-1:-1:-1;;;;;2813:826:18:o;111:27:19:-;;;-1:-1:-1;;;;;111:27:19;;:::o;4748:451:20:-;918:8:14;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;4909:20:20;;4892:14;:37;4871:137;;;;-1:-1:-1;;;4871:137:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5074:29:20;;;;;:10;:29;;;;;;;;5104:20;;;5074:51;;;;;;;;5066:60;;-1:-1:-1;;5066:60:20;;;5144:25;;;:6;:25;;;;;5170:20;;5144:47;;;;;;;;5136:56;-1:-1:-1;4748:451:20:o;114:25:21:-;;;;:::o;824:55:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;824:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;824:55:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;369:33:19:-;;;;:::o;1743:187:20:-;918:8:14;;-1:-1:-1;;;;;918:8:14;904:10;:22;896:56;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;-1:-1:-1;;;896:56:14;;;;;;;;;;;;;;;1867::20;1888:17;1907:15;1867:20;:56::i;:::-;1743:187;;:::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:25:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;7724:194:14;7833:13;7893:7;7902;7876:34;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;7876:34:14;;;;;;;;;;-1:-1:-1;7876:34:14;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7876:34:14;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7876:34:14;;;7862:49;;7724:194;;;;:::o;1619:881:18:-;1738:4;1871:25;;;:12;:25;;;;;;;;-1:-1:-1;;;;;1871:43:18;;;;;;;;;;;;1870:44;1849:149;;;;-1:-1:-1;;;1849:149:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:25;;;;:12;:25;;;;;;;;-1:-1:-1;;;;;2009:43:18;;;;;;;;;;;;:50;;-1:-1:-1;;2009:50:18;2055:4;2009:50;;;2228:40;;;;;;;;;;;;;2176:102;;2228:4;;:22;;:40;;;;;;;;;;:4;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;2228:40:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2228:40:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2228:40:18;2176:34;;;;:21;2228:40;2176:34;;;;;;:102;:38;:102;:::i;:::-;2139:34;;;;:21;:34;;;;;;;;;:139;;;;2293:82;;;;;-1:-1:-1;;;;;2293:82:18;;;;;;;;;;;;;;;;;;;;;2419:10;2437:33;2458:11;2437:20;:33::i;:::-;-1:-1:-1;2418:52:18;;1619:881;-1:-1:-1;;;;;1619:881:18:o;6199:507:14:-;6457:14;6444:9;:27;;;;;;;;;6440:200;;;6487:46;6500:16;6518:6;6526;6487:12;:46::i;:::-;6440:200;;;6564:65;6582:16;6600:12;6614:6;6622;6564:17;:65::i;:::-;6655:44;6676:11;6689:9;6655:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6199:507;;;;;;:::o;5910:231:20:-;5975:20;;:27;;6000:1;5975:27;:24;:27;:::i;:::-;5952:20;:50;;;6029:1;6012:14;:18;;;6040:10;:14;;;6070:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5910:231::o;5254:610::-;5394:14;;:21;;5413:1;5394:21;:18;:21;:::i;:::-;5377:14;:38;5438:10;;:31;;5453:15;5438:31;:14;:31;:::i;:::-;5425:10;:44;;;-1:-1:-1;;;;;5535:29:20;;;;;;:10;:29;;;;;;;;5565:20;;;5535:51;;;;;;;;:58;;-1:-1:-1;;5535:58:20;5589:4;5535:58;;;5603:25;;;:6;:25;;;;;5629:20;;5603:47;;;;;;;;:65;;;5775:20;;5809:14;;5837:10;;5684:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5254:610;;:::o;1802:244:17:-;-1:-1:-1;;;;;1877:21:17;;1869:65;;;;;-1:-1:-1;;;1869:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:12;;;:21;;1945:36;;-1:-1:-1;;;;;2012:18:17;;;-1:-1:-1;2012:18:17;;;:9;:18;;;;;;;:27;;;1991:48;;1802:244::o;849:641:18:-;1048:12;;;;;;;1047:13;1039:37;;;;;-1:-1:-1;;;1039:37:18;;;;;;;;;;;;-1:-1:-1;;;1039:37:18;;;;;;;;;;;;;;;1129:1;1107:19;:23;1086:107;;;;-1:-1:-1;;;1086:107:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:3;1224:19;:26;;1203:101;;;;;-1:-1:-1;;;1203:101:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:8;:20;;-1:-1:-1;;;;;1314:20:18;;-1:-1:-1;;1314:20:18;;;;;;1344:18;:40;;;1394:12;:19;;-1:-1:-1;;1394:19:18;1314:20;1394:19;;;1424:59;1325:9;1454:15;1471:11;1424:18;:59::i;1166:366:17:-;-1:-1:-1;;;;;1263:20:17;;1255:70;;;;-1:-1:-1;;;1255:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1343:23:17;;1335:71;;;;-1:-1:-1;;;1335:71:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17:17;;;;;;;:9;:17;;;;;;;;:26;;;1417:46;;1496:20;;;;;;;;;;:29;;;1473:52;;1166:366::o;2159:459:25:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:25;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:187;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;7291:259:14:-;7445:10;;;7434:109;;;;;-1:-1:-1;;;;;7434:109:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7445:10;;;;;7434:29;;7477:16;;7507:6;;7527;;7434:109;;;;;;;;;;;;7445:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7434:109:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7434:109:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7434:109:14;;;;7291:259;;;:::o;6832:330::-;7021:10;;;7010:145;;;;;-1:-1:-1;;;;;7010:145:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7021:10;;;;;7010:39;;7063:16;;7093:12;;7119:6;;7139;;7010:145;;;;;;;;;;;;;;;;7021:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7010:145:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7010:145:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7010:145:14;;;;6832:330;;;;:::o;1352:344:20:-;1514:12;;;;1513:13;1505:37;;;;;-1:-1:-1;;;1505:37:20;;;;;;;;;;;;-1:-1:-1;;;1505:37:20;;;;;;;;;;;;;;;1553:8;:20;;-1:-1:-1;;1553:20:20;-1:-1:-1;;;;;1553:20:20;;;;;-1:-1:-1;1583:20:20;:24;1617:12;:19;;-1:-1:-1;;1617:19:20;-1:-1:-1;1617:19:20;;;1647:42;1660:15;1677:11;1647:12;:42::i;:::-;1352:344;;;:::o;2133:149:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:149:17;;;-1:-1:-1;2133:149:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./../CosmosBridge.sol\";\n\ncontract ERC20UNSAFE {\n    uint256 private _totalSupply;\n    mapping (address => uint256) private _balances;\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n        /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender] - amount;\n        _balances[recipient] = _balances[recipient] + amount;\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply + amount;\n        _balances[account] = _balances[account] + amount;\n    }\n}\n\n\n/// @notice Add a token to the cosmos bridge to test that upgrades work correctly\ncontract MockCosmosBridgeUpgrade is CosmosBridge, ERC20UNSAFE {\n\n    function tokenFaucet() public {\n        _mint(msg.sender, 100000000000);\n    }\n}",
  "sourcePath": "/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
  "ast": {
    "absolutePath": "/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
    "exportedSymbols": {
      "ERC20UNSAFE": [
        2467
      ],
      "MockCosmosBridgeUpgrade": [
        2482
      ]
    },
    "id": 2483,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2347,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol",
        "file": "./../CosmosBridge.sol",
        "id": 2348,
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 2248,
        "src": "25:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2467,
        "linearizedBaseContracts": [
          2467
        ],
        "name": "ERC20UNSAFE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2350,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "85:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2349,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2354,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "119:46:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2353,
              "keyType": {
                "id": 2351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:28:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2365,
              "nodeType": "Block",
              "src": "290:42:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2361,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "307:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2363,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2356,
                      "src": "317:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "307:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2360,
                  "id": 2364,
                  "nodeType": "Return",
                  "src": "300:25:17"
                }
              ]
            },
            "documentation": "@dev See {IERC20-balanceOf}.",
            "id": 2366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "243:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:17:17"
            },
            "returnParameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "281:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:9:17"
            },
            "scope": 2467,
            "src": "224:108:17",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "610:78:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "630:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "630:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "642:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2379,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "653:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2375,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "620:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "620:40:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "677:4:17",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2374,
                  "id": 2383,
                  "nodeType": "Return",
                  "src": "670:11:17"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "553:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2370,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "572:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:17"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "604:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:6:17"
            },
            "scope": 2467,
            "src": "535:153:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2432,
              "nodeType": "Block",
              "src": "1245:287:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2395,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1263:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1263:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:39:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1255:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:70:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:70:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2404,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1343:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1343:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1368:37:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1335:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:71:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:71:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2412,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1417:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2414,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2413,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1427:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1417:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "1437:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2416,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1447:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1437:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1457:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1437:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1417:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:46:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2422,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1473:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2423,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "1483:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2425,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "1496:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2427,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2426,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1506:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1496:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1519:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1496:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1473:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2431,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:52:17"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 2433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1185:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1201:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1220:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:51:17"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:17"
            },
            "scope": 2467,
            "src": "1166:366:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "1859:187:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2441,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2435,
                          "src": "1877:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1877:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:33:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1869:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2448,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2449,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "1945:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2450,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1960:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2451,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "1975:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1960:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1945:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:36:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2455,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1991:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2457,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2456,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "2001:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1991:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2458,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "2012:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2460,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2459,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2435,
                          "src": "2022:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2012:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2461,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "2033:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2012:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1991:48:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:48:17"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2435,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "1817:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2437,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "1834:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:33:17"
            },
            "returnParameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:17"
            },
            "scope": 2467,
            "src": "1802:244:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2483,
        "src": "58:1990:17"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2468,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2247,
              "src": "2169:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$2247",
                "typeString": "contract CosmosBridge"
              }
            },
            "id": 2469,
            "nodeType": "InheritanceSpecifier",
            "src": "2169:12:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2470,
              "name": "ERC20UNSAFE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2467,
              "src": "2183:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20UNSAFE_$2467",
                "typeString": "contract ERC20UNSAFE"
              }
            },
            "id": 2471,
            "nodeType": "InheritanceSpecifier",
            "src": "2183:11:17"
          }
        ],
        "contractDependencies": [
          2247,
          2288,
          2467,
          2686,
          2709,
          3137,
          3164
        ],
        "contractKind": "contract",
        "documentation": "@notice Add a token to the cosmos bridge to test that upgrades work correctly",
        "fullyImplemented": true,
        "id": 2482,
        "linearizedBaseContracts": [
          2482,
          2467,
          2247,
          2686,
          3137,
          3164,
          2709,
          2288
        ],
        "name": "MockCosmosBridgeUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "2232:48:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "2248:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2248:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030",
                        "id": 2477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:12:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "id": 2474,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2466,
                      "src": "2242:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2479,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:31:17"
                }
              ]
            },
            "documentation": null,
            "id": 2481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFaucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:17"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:17"
            },
            "scope": 2482,
            "src": "2202:78:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2483,
        "src": "2133:149:17"
      }
    ],
    "src": "0:2282:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
    "exportedSymbols": {
      "ERC20UNSAFE": [
        2467
      ],
      "MockCosmosBridgeUpgrade": [
        2482
      ]
    },
    "id": 2483,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2347,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/Users/bjmcd/Documents/Development/Clients/sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol",
        "file": "./../CosmosBridge.sol",
        "id": 2348,
        "nodeType": "ImportDirective",
        "scope": 2483,
        "sourceUnit": 2248,
        "src": "25:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2467,
        "linearizedBaseContracts": [
          2467
        ],
        "name": "ERC20UNSAFE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2350,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "85:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2349,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2354,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "119:46:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2353,
              "keyType": {
                "id": 2351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:28:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2365,
              "nodeType": "Block",
              "src": "290:42:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2361,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "307:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2363,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2356,
                      "src": "317:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "307:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2360,
                  "id": 2364,
                  "nodeType": "Return",
                  "src": "300:25:17"
                }
              ]
            },
            "documentation": "@dev See {IERC20-balanceOf}.",
            "id": 2366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "243:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:17:17"
            },
            "returnParameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "281:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:9:17"
            },
            "scope": 2467,
            "src": "224:108:17",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "610:78:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "630:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "630:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "642:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2379,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "653:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2375,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2433,
                      "src": "620:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "620:40:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "677:4:17",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2374,
                  "id": 2383,
                  "nodeType": "Return",
                  "src": "670:11:17"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "553:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2370,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "572:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:17"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "604:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:6:17"
            },
            "scope": 2467,
            "src": "535:153:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2432,
              "nodeType": "Block",
              "src": "1245:287:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2395,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1263:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1263:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:39:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1255:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:70:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:70:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2404,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1343:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1343:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1368:37:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1335:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:71:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:71:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2412,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1417:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2414,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2413,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1427:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1417:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "1437:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2416,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1447:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1437:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1457:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1437:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1417:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:46:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2422,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1473:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2423,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "1483:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2425,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "1496:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2427,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2426,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1506:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1496:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1519:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1496:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1473:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2431,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:52:17"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 2433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1185:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1201:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "1220:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:51:17"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:17"
            },
            "scope": 2467,
            "src": "1166:366:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "1859:187:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2441,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2435,
                          "src": "1877:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1877:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:33:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4473,
                        4474
                      ],
                      "referencedDeclaration": 4474,
                      "src": "1869:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2448,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2449,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "1945:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2450,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1960:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2451,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "1975:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1960:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1945:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:36:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2455,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "1991:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2457,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2456,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "2001:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1991:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2458,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2354,
                          "src": "2012:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2460,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2459,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2435,
                          "src": "2022:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2012:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2461,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "2033:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2012:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1991:48:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:48:17"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2435,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "1817:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2437,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "1834:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:33:17"
            },
            "returnParameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:17"
            },
            "scope": 2467,
            "src": "1802:244:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2483,
        "src": "58:1990:17"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2468,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2247,
              "src": "2169:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$2247",
                "typeString": "contract CosmosBridge"
              }
            },
            "id": 2469,
            "nodeType": "InheritanceSpecifier",
            "src": "2169:12:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2470,
              "name": "ERC20UNSAFE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2467,
              "src": "2183:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20UNSAFE_$2467",
                "typeString": "contract ERC20UNSAFE"
              }
            },
            "id": 2471,
            "nodeType": "InheritanceSpecifier",
            "src": "2183:11:17"
          }
        ],
        "contractDependencies": [
          2247,
          2288,
          2467,
          2686,
          2709,
          3137,
          3164
        ],
        "contractKind": "contract",
        "documentation": "@notice Add a token to the cosmos bridge to test that upgrades work correctly",
        "fullyImplemented": true,
        "id": 2482,
        "linearizedBaseContracts": [
          2482,
          2467,
          2247,
          2686,
          3137,
          3164,
          2709,
          2288
        ],
        "name": "MockCosmosBridgeUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "2232:48:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "2248:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2248:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030",
                        "id": 2477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:12:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "id": 2474,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2466,
                      "src": "2242:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2479,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:31:17"
                }
              ]
            },
            "documentation": null,
            "id": 2481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFaucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:17"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:17"
            },
            "scope": 2482,
            "src": "2202:78:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2483,
        "src": "2133:149:17"
      }
    ],
    "src": "0:2282:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-31T03:14:05.343Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "Add a token to the cosmos bridge to test that upgrades work correctly"
  }
}