syntax = "proto3";
package sifchain.ethbridge.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/sifchain/sifnode/x/ethbridge/types";

enum ClaimType {
  CLAIM_TYPE_UNSPECIFIED = 0;
  CLAIM_TYPE_LOCK        = 1;
  CLAIM_TYPE_BURN        = 2;
}

// EthBridgeClaim is a structure that contains all the data for a particular bridge claim
message EthBridgeClaim {
  int64  ethereu_chain_id        = 1 [(gogoproto.moretags) = "yaml:\"ethereu_chain_id\""];
  string bridge_contract_address = 2 [(gogoproto.moretags) = "yaml:\"bridge_contract_address\""];
  int64  nonce                   = 3 [(gogoproto.moretags) = "yaml:\"nonce\""];
  string symbol                  = 4 [(gogoproto.moretags) = "yaml:\"symbol\""];
  string token_contract_address  = 5 [(gogoproto.moretags) = "yaml:\"token_contract_address\""];
  string ethereum_sender         = 6 [(gogoproto.moretags) = "yaml:\"ethereum_sender\""];
  string cosmos_receiver         = 7 [(gogoproto.moretags) = "yaml:\"cosmos_receiver\""];
  string validator_address       = 8 [(gogoproto.moretags) = "yaml:\"validator_address\""];
  string amount                  = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"amount\""
  ];
  ClaimType claim_type = 10;
}
