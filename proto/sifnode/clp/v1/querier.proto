syntax = "proto3";
package sifnode.clp.v1;

import "gogoproto/gogo.proto";
import "sifnode/clp/v1/types.proto";

option go_package = "github.com/sifchain/sifnode/x/clp/types";

service Query {
  rpc QueryGetPool(QueryReqGetPoolRequest) returns (QueryReqGetPoolResponse);
  rpc QueryLiquidityProvider(QueryReqLiquidityProviderRequest) returns (QueryReqLiquidityProviderResponse);
  rpc QueryGetAssetList(QueryReqGetAssetListRequest) returns (QueryReqGetAssetListResponse);
  rpc QueryGetLiquidityProviderList(QueryReqGetLiquidityProviderListRequest) returns (QueryReqGetLiquidityProviderListResponse);
}

message QueryReqGetPoolRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
}

message QueryReqGetPoolResponse {}

message QueryReqLiquidityProviderRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string Symbol     = 1;
  string lp_address = 2;
}

message QueryReqLiquidityProviderResponse {}

message QueryReqGetAssetListRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string lp_address = 1;
}

message QueryReqGetAssetListResponse {}

message QueryReqGetLiquidityProviderListRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string Symbol = 1;
}

message QueryReqGetLiquidityProviderListResponse {}
