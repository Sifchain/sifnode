syntax = "proto3";
package sifnode.clp.v1;

import "gogoproto/gogo.proto";
import "sifnode/clp/v1/types.proto";
import "sifnode/clp/v1/params.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";

option go_package = "github.com/Sifchain/sifnode/x/clp/types";

service Query {
  rpc GetPool(PoolReq) returns (PoolRes) {
    option (google.api.http).get = "/sifchain/clp/v1/pool/{symbol}";
  };
  rpc GetPools(PoolsReq) returns (PoolsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/pools";
  };
  rpc GetLiquidityProvider(LiquidityProviderReq)
      returns (LiquidityProviderRes) {
    option (google.api.http).get =
        "/sifchain/clp/v1/liquidity_provider/{symbol}/{lp_address}";
  };
  rpc GetLiquidityProviderData(LiquidityProviderDataReq)
      returns (LiquidityProviderDataRes) {
    option (google.api.http).get =
        "/sifchain/clp/v1/liquidity_provider_data/{lp_address}";
  };
  rpc GetAssetList(AssetListReq) returns (AssetListRes) {
    option (google.api.http).get = "/sifchain/clp/v1/asset_list/{lp_address}";
  };
  rpc GetLiquidityProviders(LiquidityProvidersReq)
      returns (LiquidityProvidersRes) {
    option (google.api.http).get = "/sifchain/clp/v1/liquidity_providers";
  };
  rpc GetLiquidityProviderList(LiquidityProviderListReq)
      returns (LiquidityProviderListRes) {
    option (google.api.http).get =
        "/sifchain/clp/v1/liquidity_provider_list/{symbol}";
  };
  rpc GetParams(ParamsReq) returns (ParamsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/params";
  };
  rpc GetRewardParams(RewardParamsReq) returns (RewardParamsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/reward_params";
  };
  rpc GetPmtpParams(PmtpParamsReq) returns (PmtpParamsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/pmtp_params";
  };
  rpc GetLiquidityProtectionParams(LiquidityProtectionParamsReq) returns (LiquidityProtectionParamsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/liquidity_protection_params";
  };
  rpc GetProviderDistributionParams(ProviderDistributionParamsReq) returns (ProviderDistributionParamsRes) {
    option (google.api.http).get = "/sifchain/clp/v1/provider_distribution_params";
  };
}

message PoolReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
}

message PoolRes {
  sifnode.clp.v1.Pool pool = 1;
  string clp_module_address = 2;
  int64 height = 3;
}

message PoolsReq { cosmos.base.query.v1beta1.PageRequest pagination = 1; }

message PoolsRes {
  repeated sifnode.clp.v1.Pool pools = 1;
  string clp_module_address = 2;
  int64 height = 3;

  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}

message LiquidityProviderReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
  string lp_address = 2;
}

message LiquidityProviderRes {
  sifnode.clp.v1.LiquidityProvider liquidity_provider = 1;
  string native_asset_balance = 2;
  string external_asset_balance = 3;
  int64 height = 4;
}

message AssetListReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string lp_address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message AssetListRes {
  repeated sifnode.clp.v1.Asset assets = 1;
  int64 height = 2;
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message LiquidityProviderDataReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string lp_address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message LiquidityProviderDataRes {
  repeated sifnode.clp.v1.LiquidityProviderData liquidity_provider_data = 1;
  int64 height = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message LiquidityProviderListReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message LiquidityProviderListRes {
  repeated sifnode.clp.v1.LiquidityProvider liquidity_providers = 1;
  int64 height = 2;
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message LiquidityProvidersReq {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message LiquidityProvidersRes {
  repeated sifnode.clp.v1.LiquidityProvider liquidity_providers = 1;
  int64 height = 2;
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message ParamsReq {}

message ParamsRes {
  Params params = 1;
  string symmetry_threshold = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string symmetry_ratio_threshold = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message RewardParamsReq {}

message RewardParamsRes { RewardParams params = 1; }
message PmtpParamsReq {}

message PmtpParamsRes {
  sifnode.clp.v1.PmtpParams params = 1;
  sifnode.clp.v1.PmtpRateParams pmtp_rate_params = 2;
  sifnode.clp.v1.PmtpEpoch pmtp_epoch = 3;
  int64 height = 4;
}

message LiquidityProtectionParamsReq {}

message LiquidityProtectionParamsRes {
  sifnode.clp.v1.LiquidityProtectionParams params = 1;
  sifnode.clp.v1.LiquidityProtectionRateParams rate_params = 2;
  int64 height = 3;
}

message ProviderDistributionParamsReq {}

message ProviderDistributionParamsRes {
  ProviderDistributionParams params = 1;
}