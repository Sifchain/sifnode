syntax = "proto3";
package sifnode.clp.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/Sifchain/sifnode/x/clp/types";

// Params - used for initializing default parameter for clp at genesis
message Params {
  uint64 min_create_pool_threshold = 1;
  bool enable_removal_queue = 2;
}

message RewardParams {
  uint64 liquidity_removal_lock_period = 1;   // in blocks
  uint64 liquidity_removal_cancel_period = 2; // in blocks
  repeated RewardPeriod reward_periods = 4;
  string reward_period_start_time =
      5; // start time of the current (or last) reward period
}

// These params are non-governable and are calculated on chain
message PmtpRateParams {
  string pmtp_period_block_rate = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string pmtp_current_running_rate = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string pmtp_inter_policy_rate = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message PmtpParams {
  string pmtp_period_governance_rate = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  int64 pmtp_period_epoch_length = 2;
  int64 pmtp_period_start_block = 3;
  int64 pmtp_period_end_block = 4;
}
message RewardPeriod {
  string reward_period_id = 1;
  uint64 reward_period_start_block = 2;
  uint64 reward_period_end_block = 3;
  string reward_period_allocation = 4
      [ (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint" ];
  repeated PoolMultiplier reward_period_pool_multipliers = 5;
  string reward_period_default_multiplier = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];

  bool reward_period_distribute = 7;
  uint64 reward_period_mod = 8;

}

message PoolMultiplier {
  string pool_multiplier_asset = 1;
  string multiplier = 2
      [ (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec" ];
}

message LiquidityProtectionParams {
  string max_rowan_liquidity_threshold = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
  string max_rowan_liquidity_threshold_asset = 2;
  uint64 epoch_length = 3;
  bool is_active = 4;
}
message LiquidityProtectionRateParams {
  string current_rowan_liquidity_threshold = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}

message ProviderDistributionPeriod {
    string distribution_period_block_rate = 1 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
    uint64 distribution_period_start_block = 2;
    uint64 distribution_period_end_block = 3;
    uint64 distribution_period_mod = 4;
}

message ProviderDistributionParams {
  repeated ProviderDistributionPeriod distribution_periods = 1;
}

message SwapFeeRate {
    string swap_fee_rate = 1 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
}