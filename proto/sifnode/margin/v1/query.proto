syntax = "proto3";
package sifnode.margin.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sifnode/margin/v1/types.proto";

option go_package = "github.com/Sifchain/sifnode/x/margin/types";

service Query {
  rpc GetMTP(MTPRequest) returns (MTPResponse) {}
  rpc GetPositions(PositionsRequest) returns (PositionsResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/positions/{pagination.key}";
  }
  rpc GetPositionsForAddress(PositionsForAddressRequest)
      returns (PositionsForAddressResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/mtps-for-address/{address}/{pagination.key}";
  }
  rpc GetPositionsByPool(PositionsByPoolRequest) returns (PositionsByPoolResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/mtps-by-pool/{asset}/{pagination.key}";
  }
  rpc GetParams(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/params";
  }
  rpc GetStatus(StatusRequest) returns (StatusResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/status";
  }
  rpc GetWhitelist(WhitelistRequest) returns (WhitelistResponse) {
    option (google.api.http).get = "/sifchain/margin/v1/whitelist";
  }
}

message MTPRequest {
  string address = 1;
  uint64 id = 2;
}

message MTPResponse { MTP mtp = 1; }

message PositionsForAddressRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message PositionsForAddressResponse {
  repeated MTP mtps = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message PositionsByPoolRequest {
  string asset = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message PositionsByPoolResponse {
  repeated MTP mtps = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message PositionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message PositionsResponse {
  repeated MTP mtps = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message ParamsRequest {}

message ParamsResponse {
  Params params = 1;
}

message StatusRequest {

}

message StatusResponse {
  uint64 open_mtp_count = 1;
  uint64 lifetime_mtp_count = 2;
}

message WhitelistRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message WhitelistResponse {
  repeated string whitelist = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}