syntax = "proto3";
package sifnode.dispensation.v1;

import "gogoproto/gogo.proto";
import "sifnode/dispensation/v1/types.proto";

option go_package = "github.com/Sifchain/sifnode/x/dispensation/types";

service Msg {
  rpc CreateDistribution(MsgCreateDistribution)
      returns (MsgCreateDistributionResponse);
  rpc CreateUserClaim(MsgCreateUserClaim) returns (MsgCreateClaimResponse);
  rpc RunDistribution(MsgRunDistribution) returns (MsgRunDistributionResponse);
}

message MsgCreateDistribution {
  string distributor = 1;
  string authorized_runner = 2;
  DistributionType distribution_type = 3;
  repeated string output = 4
      [ (gogoproto.customtype) =
            "github.com/cosmos/cosmos-sdk/x/bank/types.Output" ];
}

message MsgCreateDistributionResponse {}
message MsgCreateClaimResponse {}
message MsgRunDistributionResponse {}

message MsgCreateUserClaim {
  string user_claim_address = 1;
  DistributionType user_claim_type = 2;
}

message MsgRunDistribution {
  string authorized_runner = 1;
  string distribution_name = 2;
  DistributionType distribution_type = 3;
  int64 distribution_count = 4;
}
