server:
  #affinity: null
  extraSecretEnvironmentVars:
    - envName: AWS_ACCESS_KEY_ID
      secretName: vault-eks-creds
      secretKey: AWS_ACCESS_KEY_ID

    - envName: AWS_SECRET_ACCESS_KEY
      secretName: vault-eks-creds
      secretKey: AWS_SECRET_ACCESS_KEY

  resources:
    requests:
      memory: 256Mi
      cpu: 100m

    limits:
      memory: 512Mi
      cpu: 500m

  extraVolumes:
    - type: secret
      name: vault-eks-creds

  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"

  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

  auditStorage:
    enabled: true

  dataStorage:
    enabled: true

  standalone:
    enabled: false

  ha:
    enabled: true
    replicas: 3

    raft:
      enabled: true
      setNodeId: true

      config: |
        ui = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }

        seal "awskms" {
          region     = "-=aws_region=-"
          kms_key_id = "-=kmskey=-"
          role_arn = "-=aws_role=-"
        }

        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal.vault:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal.vault:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal.vault:8200"
          }
        }
        service_registration "kubernetes" {
          namespace      = "vault"
          pod_name       = "vault"
        }

ui:
  enabled: true
  serviceType: "LoadBalancer"
  serviceNodePort: null
  externalPort: 8200
  activeVaultPodOnly: true