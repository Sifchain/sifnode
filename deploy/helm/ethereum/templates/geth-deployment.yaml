apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ethereum.fullname" . }}-geth
  labels:
    app: {{ template "ethereum.name" . }}
    chart: {{ template "ethereum.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: geth
spec:
  replicas: {{ .Values.geth.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ethereum.name" . }}
      release: {{ .Release.Name }}
      component: geth
  template:
    metadata:
      labels:
        app: {{ template "ethereum.name" . }}
        release: {{ .Release.Name }}
        component: geth
    spec:
      containers:
      - name: geth
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --http --http.api={{ .Values.geth.args.rpcapi }} --http.corsdomain='*' --http.addr 0.0.0.0 --http.port 8545 --networkid=3 --testnet --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC}"
        env:
        - name: ETHSTATS_SVC
          value: {{ template "ethereum.fullname" . }}-ethstats.{{ .Release.Namespace }}
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "ethereum.fullname" . }}-ethstats
              key: WS_SECRET
        ports:
        - name: rpc
          containerPort: 8545
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: root
          mountPath: /root/.ethereum
      volumes:
      - name: root
        {{- if and .Values.geth.persistence.enabled (not .Values.geth.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.geth.persistence.existingClaim }}{{ .Values.geth.persistence.existingClaim }}{{- else }}{{ template "ethereum.fullname" . }}{{- end }}
        {{- else if and .Values.geth.persistence.enabled .Values.geth.persistence.hostPath }}
        hostPath:
          path: {{ .Values.geth.persistence.hostPath }}
          type: DirectoryOrCreate
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: config 
        configMap:
          name: {{ template "ethereum.fullname" . }}-geth-config
      - name: account
        secret:
          secretName: {{ template "ethereum.fullname" . }}-geth-account
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
